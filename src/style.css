* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/* html, body {
  //.size(100%, 100%);
  min-width: 100vw;
} */
body {
  background: gray;
}
#root {
  width: 100%;
  background: gray;
}
#root header {
  width: 100%;
  padding: 1vmin 0;
  background: #353333;
  color: white;
}
#root header .container {
  display: flex;
  align-items: center;
  justify-content: center;
}
#root header .container img {
  width: 10vmin;
  height: 10vmin;
  margin-right: 1vmin;
}
#root header .container h1 {
  margin-left: 1vmin;
}
#root > div {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 4vmin 0;
}
#root > div #templateCV {
  background: white;
  width: 210mm;
  height: 100%;
  padding: 0 4vmin;
}
#root > div #templateCV section {
  margin: 3vmin 0;
  display: flex;
  flex-direction: column;
  align-items: center;
}
#root > div #templateCV section form {
  width: 100%;
  display: flex;
  align-items: center;
  flex-direction: column;
}
#root > div #templateCV section form .infoBlocks {
  display: flex;
  align-items: center;
  width: 100%;
  justify-content: center;
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) {
  margin-right: 3vmin;
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) h2 {
  text-align: center;
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) > ul > li {
  grid-template-columns: 70px minmax(auto, 250px);
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) > ul > li div {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) > ul > li div #cityName {
  position: absolute;
  width: 100%;
  background: #b6b6b6;
  z-index: 1;
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) > ul > li div #cityName li {
  display: block;
  cursor: pointer;
  padding: 1vmin;
}
#root > div #templateCV section form .infoBlocks > div:not(.photo) > ul > li div #cityName li:hover {
  background: #818181;
}
#root > div #templateCV section form .infoBlocks .photo {
  background-image: linear-gradient(rgba(68, 68, 68, 0.2), rgba(68, 68, 68, 0.2)), url('images/emptyAvatar.jpg');
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
  width: 12%;
}
#root > div #templateCV section form .infoBlocks .photo label {
  display: block;
  width: 100%;
  height: 100%;
  position: relative;
}
#root > div #templateCV section form .infoBlocks .photo label::after {
  content: '';
  display: block;
  padding-top: 150%;
}
#root > div #templateCV section form .infoBlocks .photo label input {
  display: none;
}
#root > div #templateCV section.expBlock ul.specialStyleKit > li {
  display: flex;
  flex-direction: column;
}
#root > div #templateCV .error::before {
  content: 'The field can\'t be empty.';
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  z-index: 1;
  color: red;
}
#root > div #templateCV .error input:not([type=button]),
#root > div #templateCV .error textarea {
  animation-name: changeBackgroundPositionWhileError;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#root > div #templateCV .afterError input:not([type=button]),
#root > div #templateCV .afterError textarea {
  animation-name: changeBackgroundPositionAfterError;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#root > div #templateCV .validValue input:not([type=button]),
#root > div #templateCV .validValue textarea {
  animation-name: changeBackgroundPositionValidValue;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#root > div #templateCV .active textarea,
#root > div #templateCV .active input {
  animation-name: changeBackgroundPosition;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#root > div #templateCV .afterActive input:not([type=button]),
#root > div #templateCV .afterActive textarea {
  animation-name: changeBackgroundPositionAfterActive;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#root > div #templateCV input:not([type=button]),
#root > div #templateCV textarea {
  background-image: linear-gradient(90deg, red 50%, red 50%), linear-gradient(90deg, green 50%, black 50%);
}
@keyframes changeBackgroundPosition {
  to {
    background-position: 200% 100%, 0% 100%;
  }
}
@keyframes changeBackgroundPositionWhileError {
  to {
    background-position: 100% 100%, 0% 100%;
  }
}
@keyframes changeBackgroundPositionAfterError {
  to {
    background-position: 200% 100%, 0% 100%;
  }
}
@keyframes changeBackgroundPositionValidValue {
  to {
    background-position: 200% 100%, 100% 100%;
  }
}
@keyframes changeBackgroundPositionAfterActive {
  to {
    background-position: 200% 100%, 100% 100%;
  }
}
#root > div #previewCV {
  padding: 0 4vmin 3vmin 4vmin;
  margin-top: 4vmin;
  display: flex;
  flex-direction: column;
  background: white;
  align-items: center;
  width: 210mm;
  height: 100%;
}
#root > div #previewCV > div {
  display: flex;
  width: 100%;
}
#root > div #previewCV > div #commonInformation {
  margin-right: 4vmin;
  width: 60%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
#root > div #previewCV > div #commonInformation > section {
  margin: 3vmin 0;
}
#root > div #previewCV > div #commonInformation > section h2 {
  text-align: center;
}
#root > div #previewCV > div #personalInformation {
  padding-top: 3vmin;
  width: 40%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
#root > div #previewCV > div #personalInformation #photoBlock {
  width: 60%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}
#root > div #previewCV > div #personalInformation #photoBlock::after {
  content: '';
  display: block;
  padding-top: 150%;
}
#root > div #previewCV > div #personalInformation h2 {
  text-align: center;
}
#root > div #previewCV > div #personalInformation ul {
  list-style-type: none;
}
#root > div #previewCV > div #personalInformation ul li {
  display: grid;
  grid-template-columns: 70px minmax(auto, 200px);
}
#root > div #previewCV > div #personalInformation ul li input {
  outline: none;
  border: none;
}
#root > div ul {
  list-style-type: none;
}
#root > div ul li:not(.expBlock) {
  display: grid;
  position: relative;
  grid-template-columns: 110px minmax(auto, 250px);
}
#root > div ul li:not(.expBlock) label {
  display: block;
}
#root > div ul input:not([type=button]),
#root > div ul textarea {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  background-image: linear-gradient(90deg, red 50%, red 50%), linear-gradient(90deg, green 50%, black 50%);
  background-repeat: no-repeat, no-repeat;
  background-size: 200% 2px, 200% 2px;
  margin-bottom: 5px;
  display: block;
  padding: 5px;
  outline: none;
  border: none;
  width: 100%;
}
#root footer {
  text-align: center;
  padding: 3vmin 0;
  background: #353333;
}
#root footer a {
  color: white;
  text-decoration: none;
}
#root input[type='button'] {
  border-radius: 6px;
  margin: 0 2vmin;
  padding: 1vmin;
  border: none;
  outline: none;
  cursor: pointer;
  background: green;
  color: white;
}
#root .buttons {
  margin-top: 2vmin;
}
#root .buttons input[value='Add information'] {
  border-radius: 6px;
  background: #8a8686;
}
#root .buttons input:not([value='Add information']) {
  text-align: center;
  border-radius: 50%;
  font-weight: 900;
}
#root .buttons input:not([value='Add information'])[value=' + '] {
  background: green;
  color: white;
}
#root .buttons input:not([value='Add information'])[value=' âˆ’ '] {
  background: red;
  color: white;
}
@media print {
  * {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }
  header,
  footer,
  #templateCV {
    display: none;
  }
  #root > div {
    margin: 0;
  }
  #root > div #previewCV {
    margin: 0;
    display: flex;
    width: 100%;
    height: 100%;
  }
}
@media screen and (max-width: 210mm) {
  #root header {
    padding: 3vmin 0;
  }
  #root > div #templateCV,
  #root > div #previewCV {
    width: 100%;
  }
}
@media screen and (orientation: portrait) and (max-width: 680px) {
  #root > div #templateCV section form .infoBlocks .photo {
    width: 20%;
  }
  #root input[type='button'] {
    padding: 1.5vmin 3vmin;
  }
  #root .buttons input:not([value='Add information'])[value=' + '] {
    padding: 1.5vmin;
  }
}
@media screen and (orientation: portrait) and (max-width: 500px) {
  #root > div #templateCV section form .infoBlocks .photo {
    width: 30%;
  }
  #root > div #previewCV > div {
    flex-direction: column-reverse;
    align-items: center;
  }
  #root > div #previewCV > div > #personalInformation,
  #root > div #previewCV > div > #commonInformation {
    width: 100%;
    margin: 0;
  }
  #root > div #previewCV > div > #personalInformation input,
  #root > div #previewCV > div > #commonInformation input,
  #root > div #previewCV > div > #personalInformation textarea,
  #root > div #previewCV > div > #commonInformation textarea {
    max-width: 100%;
  }
  #root > div #previewCV > div > #personalInformation {
    flex-direction: row-reverse;
  }
  #root > div #previewCV > div > #personalInformation form {
    margin-right: 3vmin;
  }
  #root > div #previewCV > div > #personalInformation #photoBlock {
    width: 30%;
  }
}
@media screen and (min-width: 210mm) {
  #root input[type='button'] {
    margin: 0 1vmin;
  }
}
