* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  background: gray;
  display: flex;
  justify-content: center;
}
#root {
  width: 210mm;
  height: 100%;
  background: white;
  margin: 3vmin 0;
}
header {
  margin: 2vmin 0;
}
header .container {
  display: flex;
  align-items: center;
  justify-content: center;
}
header .container img {
  width: 10vmin;
  height: 10vmin;
  margin-right: 1vmin;
}
header .container h1 {
  margin-left: 1vmin;
}
#templateCV section {
  display: flex;
  flex-direction: column;
  align-items: center;
}
#templateCV section form {
  width: 60%;
  display: flex;
  align-items: center;
  flex-direction: column;
}
#templateCV section form .infoBlocks {
  width: 100%;
  display: flex;
  align-items: center;
}
#templateCV section form .infoBlocks > div:not(.photo) {
  width: 60%;
  margin-right: 3vmin;
}
#templateCV section form .infoBlocks > div:not(.photo) ul {
  display: flex;
  flex-direction: column;
  list-style-type: none;
}
#templateCV section form .infoBlocks > div:not(.photo) ul > li {
  display: grid;
  grid-template-columns: 1fr 3.5fr;
  position: relative;
}
#templateCV section form .infoBlocks > div:not(.photo) ul > li label {
  display: flex;
  align-items: center;
}
#templateCV section form .infoBlocks > div:not(.photo) ul > li div {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
}
#templateCV section form .infoBlocks > div:not(.photo) ul > li div #cityName {
  position: absolute;
  width: 100%;
  background: #b6b6b6;
  z-index: 1;
}
#templateCV section form .infoBlocks > div:not(.photo) ul > li div #cityName li {
  display: block;
  cursor: pointer;
  padding: 1vmin;
}
#templateCV section form .infoBlocks > div:not(.photo) ul > li div #cityName li:hover {
  background: #818181;
}
#templateCV section form .infoBlocks .photo {
  width: 30%;
  background-image: linear-gradient(rgba(54, 54, 54, 0.1), rgba(54, 54, 54, 0.1)), url('images/emptyAvatar.jpg');
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}
#templateCV section form .infoBlocks .photo label {
  display: block;
  width: 100%;
  height: 100%;
}
#templateCV section form .infoBlocks .photo label::after {
  content: '';
  display: block;
  padding: 70%;
}
#templateCV section form .infoBlocks .photo label input {
  display: none;
}
#templateCV section > ul {
  list-style-type: none;
}
#templateCV section > ul li {
  display: grid;
  position: relative;
  grid-template-columns: 1fr 2fr;
}
#templateCV section > ul li label {
  display: block;
  max-width: 110px;
}
#templateCV section.expBlock ul.specialStyleKit > li {
  display: flex;
  flex-direction: column;
}
#templateCV section.expBlock ul.specialStyleKit > li li {
  display: grid;
  grid-template-columns: 1fr 2fr;
}
#templateCV .error::before {
  content: 'The field can\'t be empty.';
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  z-index: 1;
  color: red;
}
#templateCV .error input:not([type*=button]),
#templateCV .error textarea {
  animation-name: changeBackgroundPositionWhileError;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#templateCV .afterError input:not([type*=button]),
#templateCV .afterError textarea {
  animation-name: changeBackgroundPositionAfterError;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#templateCV .validValue input:not([type*=button]),
#templateCV .validValue textarea {
  animation-name: changeBackgroundPositionValidValue;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#templateCV .active input:not([type*=button]),
#templateCV .active textarea {
  animation-name: changeBackgroundPosition;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#templateCV .afterActive input:not([type*=button]),
#templateCV .afterActive textarea {
  animation-name: changeBackgroundPositionAfterActive;
  animation-duration: 0.8s;
  animation-fill-mode: forwards;
}
#templateCV input:not([type*=button]) {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  background-image: linear-gradient(90deg, red 50%, red 50%), linear-gradient(90deg, green 50%, black 50%);
  background-repeat: no-repeat, no-repeat;
  background-size: 200% 2px, 200% 2px;
  margin-bottom: 5px;
  display: block;
  padding: 5px;
  outline: none;
  border: none;
  width: 100%;
}
#templateCV textarea {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  border: none;
  outline: none;
  background-image: linear-gradient(90deg, red 50%, red 50%), linear-gradient(90deg, green 50%, black 50%);
  background-repeat: no-repeat, no-repeat;
  background-size: 200% 2px, 200% 2px;
}
@keyframes changeBackgroundPosition {
  to {
    background-position: 200% 100%, 0% 100%;
  }
}
@keyframes changeBackgroundPositionWhileError {
  to {
    background-position: 100% 100%, 0% 100%;
  }
}
@keyframes changeBackgroundPositionAfterError {
  to {
    background-position: 200% 100%, 0% 100%;
  }
}
@keyframes changeBackgroundPositionValidValue {
  to {
    background-position: 200% 100%, 100% 100%;
  }
}
@keyframes changeBackgroundPositionAfterActive {
  to {
    background-position: 200% 100%, 100% 100%;
  }
}
#previewCV {
  margin-top: 4vmax;
  display: flex;
  flex-direction: column;
}
#previewCV > div {
  display: flex;
}
#previewCV #commonInformation {
  width: 60vw;
  display: flex;
  flex-direction: column;
  align-items: center;
}
#previewCV #commonInformation h2 {
  text-align: center;
}
#previewCV #commonInformation ul {
  list-style-type: none;
}
#previewCV #commonInformation ul li:not(.expBlock) {
  display: grid;
  grid-template-columns: 1fr 2fr;
  position: relative;
}
#previewCV #commonInformation ul li:not(.expBlock) label {
  width: 110px;
}
#previewCV #commonInformation ul li:not(.expBlock) input:not([type*=button]) {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  background-image: linear-gradient(90deg, red 50%, red 50%), linear-gradient(90deg, green 50%, black 50%);
  background-repeat: no-repeat, no-repeat;
  background-size: 200% 2px, 200% 2px;
  margin-bottom: 5px;
  display: block;
  padding: 5px;
  outline: none;
  border: none;
  background-position: 200% 100%, 100% 100%;
}
#previewCV #commonInformation ul li:not(.expBlock) textarea {
  grid-column-start: 2;
  grid-column-end: -1;
  grid-row-start: 1;
  grid-row-end: 2;
  border: none;
  outline: none;
  background-image: linear-gradient(90deg, red 50%, red 50%), linear-gradient(90deg, green 50%, black 50%);
  background-repeat: no-repeat, no-repeat;
  background-size: 200% 2px, 200% 2px;
  background-position: 200% 100%, 100% 100%;
}
#previewCV #personalInformation {
  width: 40%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
#previewCV #personalInformation #photoBlock {
  width: 90%;
  background-size: cover;
  background-position: center center;
  background-repeat: no-repeat;
}
#previewCV #personalInformation #photoBlock::after {
  content: '';
  display: block;
  padding-top: 150%;
}
#previewCV #personalInformation ul {
  list-style-type: none;
}
#previewCV #personalInformation ul li {
  display: flex;
}
#previewCV #personalInformation ul li label {
  flex-grow: 1;
}
#previewCV #personalInformation ul li input {
  outline: none;
  border: none;
  border-bottom: solid black 1px;
}
@media print {
  * {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }
  #templateCV {
    display: none;
  }
}
/* @media screen and (min-width: 1000px) {
  #root {
    .size(80%; 100%)
  }
}

@media screen and (min-width: 1500px) {
  #root {
    .size(60%; 100%)
  }
} */
