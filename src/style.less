.size(@width, @height) {
  width: @width;
  height: @height;
}

@emptyAvatar: './images/emptyAvatar.jpg';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  .size(100%, 100%)
}

body {
  background: gray;
}

#root {
  width: 100%;
  background: gray;

  header {
    width: 100%;
    padding: 1vmin 0;
    background: rgb(53, 51, 51);
    color: white;
  
    & .container {
      display: flex;
      align-items: center;
      justify-content: center;
    
      & img {
        .size(10vmin; 10vmin);
        margin-right: 1vmin;
      }
    
      & h1{
        margin-left: 1vmin;
      }
    }
  }

  & > div {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 4vmin 0;

    #templateCV {
      background: white;
      .size(210mm, 100%);
      padding: 0 4vmin;
    
      & section {
        margin: 3vmin 0;
        display: flex;
        flex-direction: column;
        align-items: center;
    
        & form {
          width: 100%;
          display: flex;
          align-items: center;
          flex-direction: column;
    
          & .infoBlocks {
            display: flex;
            align-items: center;
            width: 100%;
            justify-content: center;
    
            & > div:not(.photo) {
              margin-right: 3vmin;

              h2 {
                text-align: center;
              }

              & > ul > li {
                grid-template-columns: 70px minmax(auto, 250px);

                & div {
                  grid-column-start: 2;
                  grid-column-end: -1;
                  grid-row-start: 1;
                  grid-row-end: 2;
    
                  #cityName {
                    position: absolute;
                    width: 100%;
                    background: rgb(182, 182, 182);
                    z-index: 1;
                  
                    li {
                      display: block;
                      cursor: pointer;
                      padding: 1vmin;
    
                      &:hover {
                        background: rgb(129, 129, 129);
                      }
                    }
                  }
                }

              }
            }
            
    
            & .photo{
              background-image: linear-gradient(rgba(68, 68, 68, 0.2), rgba(rgba(68, 68, 68, 0.2))),
                                                url(@emptyAvatar);
              background-size: cover;
              background-position: center center;
              background-repeat: no-repeat;
              width: 12%;
              
              & label {
                width: 100%;
                display: block;
                .size(100%, 100%);
                position: relative;
    
                &::after {
                  content: '';
                  display: block;
                  padding-top: 150%;
                }
            
                & input {
                  display: none;
                }
              }
            }
          }
        }
      }

      & section.expBlock {
        & ul.specialStyleKit > li {
          display: flex;
          flex-direction: column;
        }
      }
    
      .error {
        &::before {
          content: 'The field can\'t be empty.';
          grid-column-start: 2;
          grid-column-end: -1;
          grid-row-start: 1;
          grid-row-end: 2;
          z-index: 1;

          color: red;
          margin-bottom: 7px;
          display: flex;
          align-items: center;
          background: white; 
          background-clip: content-box;
        }
    
        input:not([type=button]),
        textarea {
          animation-name: changeBackgroundPositionWhileError;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
        }
      }
    
      .afterError {
        input:not([type=button]),
        textarea {
          animation-name: changeBackgroundPositionAfterError;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
        }
      }
    
      .validValue {
        input:not([type=button]),
        textarea {
          animation-name: changeBackgroundPositionValidValue;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
        }
      }
    
      .active {
        textarea, input {
          animation-name: changeBackgroundPosition;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
        }
      }
    
      .afterActive {
        input:not([type=button]),
        textarea {
          animation-name: changeBackgroundPositionAfterActive;
          animation-duration: 0.8s;
          animation-fill-mode: forwards;
        }
      }
    
      input:not([type=button]),
      textarea { 
        background-image: linear-gradient(90deg, red 50%, red 50%),
                          linear-gradient(90deg, green 50%, black 50%);
      }
    
      @keyframes changeBackgroundPosition {
        to {
          background-position: 200% 100%, 0% 100%;
        }
      }
      
      @keyframes changeBackgroundPositionWhileError {
        to {
          background-position: 100% 100%, 0% 100%;
        }
      }
      
      @keyframes changeBackgroundPositionAfterError {
        to {
          background-position: 200% 100%, 0% 100%;
        }
      }
      
      @keyframes changeBackgroundPositionValidValue {
        to {
          background-position: 200% 100%, 100% 100%;
        }
      }
      
      @keyframes changeBackgroundPositionAfterActive {
        to {
          background-position: 200% 100%, 100% 100%;
        }
      }
    }
    
    #previewCV {
      padding: 0 4vmin 3vmin 4vmin;
      margin-top: 4vmin;
      display: flex;
      flex-direction: column;
      background: white;
      align-items: center;
      .size(210mm, 100%);
    
      & > div {
        display: flex;
        width: 100%;

        & #commonInformation {
          margin-right: 4vmin;
          width: 60%;
          display: flex;
          flex-direction: column;
          align-items: center;

          & > section {
            margin: 3vmin 0;

            h2 {
              text-align: center;
            }
          }
        }
      
        & #personalInformation {
          padding-top: 3vmin;
          width: 40%;
          display: flex;
          flex-direction: column;
          align-items: center;
      
          & #photoBlock {
            width: 60%;
      
            background-size: cover;
            background-position: center center;
            background-repeat: no-repeat;
            //margin-bottom: 3vmin;
      
            &::after {
              content: '';
              display: block;
              padding-top: 150%;
            }
          }

          & h2 {
            text-align: center;
          }
      
          & ul {
            list-style-type: none;
      
            & li {
              display: grid;
              grid-template-columns: 70px minmax(auto, 200px);
      
              & input {
                outline: none;
                border: none;
              }
            }
          }
        }
      }
    }

    & ul {
      list-style-type: none;

      & li:not(.expBlock) {
        display: grid;
        position: relative;
        grid-template-columns: 110px minmax(auto, 250px);

        & label {
          display: block;
        }
      }

      input:not([type=button]),
      textarea {
        grid-column-start: 2;
        grid-column-end: -1;
        grid-row-start: 1;
        grid-row-end: 2;

        background-image: linear-gradient(90deg, red 50%, red 50%),
                          linear-gradient(90deg, green 50%, black 50%);

        background-repeat: no-repeat, no-repeat;   
        background-size: 200% 2px, 200% 2px;
    
        margin-bottom: 5px;
        display: block;
        padding: 5px;
        outline: none;
        border: none;
        width: 100%;
      }
    }
  }

  footer {
    text-align: center;
    padding: 3vmin 0;
    background: rgb(53, 51, 51);

    a {
      color: white;
      text-decoration: none;
    }
  }

  /* input[type='button'] {
    border-radius: 6px;
    margin: 0 2vmin;
    padding: 1vmin 2vmin;
    border: none;
    outline: none;
    cursor: pointer;
    background: green;
    color: white;
  } */

  button {
    border-radius: 6px;
    margin: 0 2vmin;
    border: none;
    outline: none;
    cursor: pointer;
    color: white;
    background: green;
    padding: 1vmin 2vmin;
    font-family: monospace;
  }

  section form .buttons button.addInfo {
    height: 3.6vmin;
  }

  .buttons {
    margin-top: 2vmin;
    display: flex;

    button {

      &::after {
        display: block;
        position: absolute;
        font-weight: 900;
        transform: translate(-50%, -50%);
        font-size: 16px;
      }
      
      &.addInfo {
        border-radius: 6px;
        background: rgb(136, 120, 120);
        padding: 0 2vmin;
      }

      &:not(.addInfo) {
        border-radius: 50%;
        padding: 1.8vmin;
      }

      &.plus {
        background: green;
        position: relative;

        &::after {
          content: '+';
        }
      }

      &.minus {
        background: red;

        &::after {
          content: 'âˆ’';
        }
      }
    }
  }
}

input, button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

@media print { 
  * {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }

  header, footer, #templateCV {
    display: none;
  }

  #root {

    & > div {
      margin: 0;

      #previewCV {
        margin: 0;
        display: flex;
        .size(100%, 100%);
      }
    }
  }
}

@media screen and (max-width: 210mm) {
  #root {

    header {
      padding: 3vmin 0;
    }

    & > div {
      #templateCV,
      #previewCV {
        width: 100%;
      }
    }
  }
}

@media screen and (orientation: portrait) and (max-width: 680px) {
  #root {
    & > div {
      & #templateCV section form .infoBlocks .photo {
        width: 20%;
      }
    }

    section form .buttons button.addInfo {
      height: 4.4vmin;
    }

    .buttons { 
      button {
        &:not(.addInfo) {
          padding: 2.2vmin;
        }
      }
    }


/*     input[type='button'] {
      padding: 1.5vmin 3vmin;
    }

    .buttons input:not([value='Add information'])[value=' + '] {
      padding: 1.5vmin;
    } */
  }
}

@media screen and (orientation: portrait) and (max-width: 500px) {
  #root {
    & > div {
      & #templateCV section form .infoBlocks .photo {
        width: 30%;
      }

      #previewCV {
        & > div {
          flex-direction: column-reverse;
          align-items: center;

          & > #personalInformation,
          & > #commonInformation {
            width: 100%;
            margin: 0;
            
            input,
            textarea {
              max-width: 100%;
            }
          }

          & > #personalInformation {
            flex-direction: row-reverse;

            form {
              margin-right: 3vmin;
            }

            #photoBlock {
              width: 30%;
            }
          }
        }
      }
    }

    section form .buttons button.addInfo {
      height: 5.6vmin;
    }

    .buttons { 
      button {
        &:not(.addInfo) {
          padding: 2.8vmin;
        }
      }
    }
  }
}


@media screen and (min-width: 210mm) {
  #root {
    input[type='button'] {
      margin: 0 1vmin;
    }

    & > div #previewCV>div #personalInformation #photoBlock {
      margin-bottom: 1vmin;
    }
  }
}