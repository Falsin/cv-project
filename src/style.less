.size(@width, @height) {
  width: @width;
  height: @height;
}

@emptyAvatar: './images/emptyAvatar.jpg';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: gray;
  display: flex;
  justify-content: center;
}

#root {
  .size(210mm, 100%);
  background: white;
  margin: 3vmin 0;
  //position: relative;
}

header {
  margin: 2vmin 0;

  & .container {
    display: flex;
    align-items: center;
    justify-content: center;
  
    & img {
      .size(10vmin; 10vmin);
      margin-right: 1vmin;
    }
  
    & h1{
      margin-left: 1vmin;
    }
  }
}

#templateCV {
  & section {
    display: flex;
    flex-direction: column;
    align-items: center;

    & form {
      width: 60%;
      display: flex;
      align-items: center;
      flex-direction: column;

      & .infoBlocks {
        width: 100%;
        display: flex;
        align-items: center;

        & > div:not(.photo) {
          width: 60%;
          margin-right: 3vmin;

          & ul {
            display: flex;
            flex-direction: column;
            list-style-type: none;
  
            & > li {
              display: grid;
              //grid-template-columns: 0.8fr 2.2fr;
              grid-template-columns: 1fr 3.5fr;
              position: relative;
  
              & label {
                display: flex;
                align-items: center;
                //width: 55px;
              }
  
              & div {
                grid-column-start: 2;
                grid-column-end: -1;
                grid-row-start: 1;
                grid-row-end: 2;
  
                #cityName {
                  position: absolute;
                  width: 100%;
                  background: rgb(182, 182, 182);
                  z-index: 1;
                
                  li {
                    display: block;
                    cursor: pointer;
                    padding: 1vmin;
  
                    &:hover {
                      background: rgb(129, 129, 129);
                    }
                  }
                }
              }
            }
          }
        }

        & .photo{
          //border: solid 1px black;
          width: 30%;
          background-image: linear-gradient(rgba(54, 54, 54, 0.1), rgba(54, 54, 54, 0.1)),
                                            url(@emptyAvatar);
          background-size: cover;
          background-position: center center;
          background-repeat: no-repeat;
          //background-blend-mode: luminosity;
          
        
          & label {
            width: 100%;
            display: block;
            .size(100%, 100%);

            &::after {
              content: '';
              display: block;
              padding: 70%;
            }
        
            & input {
              display: none;
            }
          }
        }
      }
    }

    & > ul {
      list-style-type: none;

      & li {
        display: grid;
        position: relative;
        grid-template-columns: 1fr 2fr;

        & label {
          display: block;
          max-width: 110px; 
        }
      }
    }
  }

  & section.expBlock {
    & ul.specialStyleKit > li {
      display: flex;
      flex-direction: column;

      & li {
        display: grid;
        grid-template-columns: 1fr 2fr;
      }
    }
  }

  .error {
    &::before {
      content: 'The field can\'t be empty.';
      grid-column-start: 2;
      grid-column-end: -1;
      grid-row-start: 1;
      grid-row-end: 2;
      z-index: 1;
      color: red; 
    }

    input:not([type*=button]),
    textarea {
      animation-name: changeBackgroundPositionWhileError;
      animation-duration: 0.8s;
      animation-fill-mode: forwards;
    }
  }

  .afterError {
    input:not([type*=button]),
    textarea {
      animation-name: changeBackgroundPositionAfterError;
      animation-duration: 0.8s;
      animation-fill-mode: forwards;
    }
  }

  .validValue {
    input:not([type*=button]),
    textarea {
      animation-name: changeBackgroundPositionValidValue;
      animation-duration: 0.8s;
      animation-fill-mode: forwards;
    }
  }

  .active {
    input:not([type*=button]),
    textarea {
      animation-name: changeBackgroundPosition;
      animation-duration: 0.8s;
      animation-fill-mode: forwards;
    }
  }

  .afterActive {
    input:not([type*=button]),
    textarea {
      animation-name: changeBackgroundPositionAfterActive;
      animation-duration: 0.8s;
      animation-fill-mode: forwards;
    }
  }

  input:not([type*=button]) {
    grid-column-start: 2;
    grid-column-end: -1;
    grid-row-start: 1;
    grid-row-end: 2;

    background-image: linear-gradient(90deg, red 50%, red 50%),
                      linear-gradient(90deg, green 50%, black 50%);
    background-repeat: no-repeat, no-repeat;   
    background-size: 200% 2px, 200% 2px;

    margin-bottom: 5px;
    display: block;
    padding: 5px;
    outline: none;
    border: none;
    width: 100%;
  }

  textarea {
    grid-column-start: 2;
    grid-column-end: -1;
    grid-row-start: 1;
    grid-row-end: 2;

    border: none;
    outline: none;
    background-image: linear-gradient(90deg, red 50%, red 50%),
                      linear-gradient(90deg, green 50%, black 50%);
    background-repeat: no-repeat, no-repeat;   
    background-size: 200% 2px, 200% 2px;
  }

  @keyframes changeBackgroundPosition {
    to {
      background-position: 200% 100%, 0% 100%;
    }
  }
  
  @keyframes changeBackgroundPositionWhileError {
    to {
      background-position: 100% 100%, 0% 100%;
    }
  }
  
  @keyframes changeBackgroundPositionAfterError {
    to {
      background-position: 200% 100%, 0% 100%;
    }
  }
  
  @keyframes changeBackgroundPositionValidValue {
    to {
      background-position: 200% 100%, 100% 100%;
    }
  }
  
  @keyframes changeBackgroundPositionAfterActive {
    to {
      background-position: 200% 100%, 100% 100%;
    }
  }
}

#previewCV {
  margin-top: 4vmax;
  display: flex;
  flex-direction: column;

  & > div {
    display: flex;
  }

  & #commonInformation {
    width: 60vw;
    display: flex;
    flex-direction: column;
    align-items: center;

    h2 {
      text-align: center;
    }

    ul {
      list-style-type: none;

      li:not(.expBlock) {
        display: grid;
        grid-template-columns: 1fr 2fr;
        position: relative;

        label {
          width: 110px;
        }

        input:not([type*=button]) {
          grid-column-start: 2;
          grid-column-end: -1;
          grid-row-start: 1;
          grid-row-end: 2;
        
          background-image: linear-gradient(90deg, red 50%, red 50%),
                            linear-gradient(90deg, green 50%, black 50%);
          background-repeat: no-repeat, no-repeat;   
          background-size: 200% 2px, 200% 2px;
        
          margin-bottom: 5px;
          display: block;
          padding: 5px;
          outline: none;
          border: none;
          background-position: 200% 100%, 100% 100%;
        }
        
        textarea {
          grid-column-start: 2;
          grid-column-end: -1;
          grid-row-start: 1;
          grid-row-end: 2;
        
          border: none;
          outline: none;
          background-image: linear-gradient(90deg, red 50%, red 50%),
                            linear-gradient(90deg, green 50%, black 50%);
          background-repeat: no-repeat, no-repeat;   
          background-size: 200% 2px, 200% 2px;
          background-position: 200% 100%, 100% 100%;
        }
      }
    }
  }

  & #personalInformation {
    width: 40%;
    display: flex;
    flex-direction: column;
    align-items: center;

    & #photoBlock {
      width: 90%;

      background-size: cover;
      background-position: center center;
      background-repeat: no-repeat;

      &::after {
        content: '';
        display: block;
        padding-top: 150%;
      }
    }

    & ul {
      list-style-type: none;

      & li {
        display: flex;
        
        & label {
          flex-grow: 1;
        }

        & input {
          outline: none;
          border: none;
          border-bottom: solid black 1px;
        }
      }
    }
  }
}

@media print { 
  * {
    -webkit-print-color-adjust: exact;
    color-adjust: exact;
  }
  
  #templateCV {
    display: none;
  }
}

/* @media screen and (min-width: 1000px) {
  #root {
    .size(80%; 100%)
  }
}

@media screen and (min-width: 1500px) {
  #root {
    .size(60%; 100%)
  }
} */