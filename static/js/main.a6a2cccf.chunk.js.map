{"version":3,"sources":["images/сonstructor.jpg","headerComponent/Header.js","commonComponents/additionalComponents/ChangeHandler.js","commonComponents/additionalComponents/ComponentsForInputsElements/InputsComponents.js","commonComponents/additionalComponents/CloneObj.js","commonComponents/additionalComponents/CreateListCompForTemplate.js","commonComponents/components/templateCV/compForTemplateCV/commonInfoComponents/InfoBox.js","commonComponents/components/templateCV/compForTemplateCV/commonInfoComponents/PhotoComp.js","commonComponents/additionalComponents/componentsForButtonSection/ButtonComp.js","commonComponents/additionalComponents/componentsForButtonSection/ButtonsSectionComp.js","commonComponents/additionalComponents/ClickHandler.js","commonComponents/additionalComponents/componentsForButtonSection/functionsForButtons.js","commonComponents/components/templateCV/compForTemplateCV/GeneralInfo.js","commonComponents/components/templateCV/compForTemplateCV/EducationalExperience.js","commonComponents/components/templateCV/TemplateCV.js","commonComponents/components/templateCV/compForTemplateCV/PracticalExperience.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/CreateListCompForPreview.js","images/emptyAvatar.jpg","commonComponents/components/previewCV/personalInfoBlock/compForOutputPersonalInfo/PhotoBlockComp.js","commonComponents/components/previewCV/personalInfoBlock/OutputPersonalInfo.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/CreateCollectionComp.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/OutputInfoComp.js","commonComponents/components/previewCV/commonInformation/CommonInformationComp.js","commonComponents/CommonParentComponent.js","commonComponents/components/previewCV/PreviewCV.js","index.js"],"names":["Header","className","src","constructor","alt","React","Component","changeHandler","InputComp","props","uniqIndex","uniqid","parentScope","scope","objName","array","state","isValidValue","defaultValue","value","backgroundPosition","element","console","log","this","setState","discoverAnimation","length","dir","parentNode","classList","add","e","getAnimations","forEach","elem","onfinish","currentStyle","getComputedStyle","style","prevProps","prevState","document","getElementById","readonly","subObj","obj","nextProps","nextState","htmlFor","call","input","arram","type","templateScope","readOnly","onFocus","afterFocus","target","id","onBlur","afterBlurTest","textArea","enteredVal","whileFocus","onChange","countryComp","countryNamesArr","createListElements","collection","enteredItem","lowerCaseVal","toLowerCase","name","lowerCaseName","includes","push","enteredValHandler","list","removeAllChildElements","option","createElement","textContent","key","append","addEventListener","Promise","res","then","parentId","childTag","querySelectorAll","remove","mouseDownListener","fetch","mode","response","json","bind","map","onMouseDown","cloneObj","sourceObj","newObj","Array","isArray","CreateListCompForTemplate","collectionInputElements","Object","values","inputElem","idHtmlWithError","objKeys","collectionCompElem","countElemWithError","index","interimArr","splice","iterator","checkThisProps","every","isValid","entries","item","InfoBox","personalInfo","generalInfo","duplicateState","PhotoComp","url","undefined","selectedFile","files","reader","FileReader","elemTag","querySelector","onload","result","backgroundImage","addPropertyInState","readAsDataURL","clone","Avatar","onFileSelected","Button","onClick","func","ButtonsSection","btns","clickHandler","createObj","arrayOfKeysAndValues","objectWithProps","arrayWithObjects","check","addInfo","name1","name2","defaultState","sendInfo","propName","checkСondition","find","commonParentScope","sendSingleInformation","GeneralInfo","Name","Email","Phone","Country","EducationalExperience","educationalExperience","educationalExperienceCollection","educExp","TemplateCV","CloneObj","returnParentScope","CreateListCompForPreview","PhotoBlock","emptyAvatar","OutputPersonalInfo","parentState","CreateCollectionComp","OutputInfoComp","collectionPractic","templatePractic","renderComp","headline","CommonInformation","practicExp","CommonParentComponent","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a6a2cccf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/сonstructor.13325f3d.jpg\";","import React from 'react';\nimport constructor from '../images/сonstructor.jpg';\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <header>\n        <div className='container'>\n          <img src={constructor} alt=''></img>\n          <h1>CV Сonstructor</h1>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import addPropertiesInState from \"./AddPropertiesInState\";\n\nfunction changeHandler(e, subObj) {\n  if (e.target.value.length > 0 && ![...e.target.classList].includes('active')) {\n    e.target.classList.add('active');\n  } else if (!e.target.value.length) {\n    e.target.classList.remove('active');\n  }\n\n  return addPropertiesInState.call(this, e, subObj)\n}\n\nexport default changeHandler;","import React from 'react';\nimport uniqid from 'uniqid'\n\nclass InputComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uniqIndex = uniqid();\n    this.parentScope = props.scope;\n    this.objName = props.array[0];\n\n    this.state = {\n      isValidValue: true,\n      defaultValue: props.array[1].value,\n      backgroundPosition: '200% 100%, 100% 100%',\n    }\n  }\n\n/*   afterBlur(e) {\n    this.setState({defaultValue: e.target.value});\n    if (!e.target.value.length) {\n      this.setState({\n        isValidValue: false,\n      });\n    } else {\n      this.setState({\n        isValidValue: true,\n      });\n    }\n  } */\n\n  afterBlurTest(element) {\n    console.log('afterblur')\n    this.setState({defaultValue: element.value});\n    this.discoverAnimation(element);\n\n    if (!element.value.length) {\n      console.dir(element)\n      element.parentNode.classList.add('error');\n      this.setState({isValidValue: false});\n    } else {\n      this.setState({isValidValue: true});\n    }\n  }\n\n  afterFocus(e) {\n    this.discoverAnimation(e);\n  }\n\n  discoverAnimation(e) {\n    const animations = e.getAnimations();\n    animations.forEach(elem => {\n      elem.onfinish = () => {\n        let computedStyle = getComputedStyle(e);\n        let currentStyle = computedStyle.backgroundPosition;\n        console.log(currentStyle)\n        e.style.backgroundPosition = currentStyle;\n        if (this.state.backgroundPosition !== currentStyle) {\n          this.setState({backgroundPosition: currentStyle})\n        }\n      }\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {  //отредактировать\n    let input = document.getElementById(this.uniqIndex);\n\n    if (!this.parentScope.readonly) {\n      /*const animations = input.getAnimations();\n       animations.forEach(elem => {\n        elem.onfinish = () => {\n          let computedStyle = getComputedStyle(input);\n          let currentStyle = computedStyle.backgroundPosition;\n          console.log(currentStyle)\n          if (this.state.backgroundPosition !== currentStyle) {\n            this.setState({backgroundPosition: currentStyle})\n          }\n        }\n      }) */\n\n      /* if (prevState.defaultValue !== this.state.defaultValue) {\n        this.parentScope.props.subObj[this.objName].value = this.state.defaultValue;\n        this.parentScope.scope.setState(this.parentScope.props.obj);\n      } else if (prevProps.array[1].value !== this.props.array[1].value) {\n        this.setState({defaultValue: this.props.array[1].value})\n      } */\n    } /* else {\n      this.setState({defaultValue: this.props.array[1].value});\n    } */\n\n    if (prevState.defaultValue !== this.state.defaultValue) {\n      //console.log('update2')\n      this.parentScope.props.subObj[this.objName].value = this.state.defaultValue;\n      this.parentScope.scope.setState(this.parentScope.props.obj);\n    } else if (prevProps.array[1].value !== this.props.array[1].value) {\n      this.setState({defaultValue: this.props.array[1].value})\n    }\n\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.defaultValue !== nextState.defaultValue ||\n      nextProps.array[1].value !== this.state.defaultValue) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <li key={uniqid()} className={this.state.isValidValue ? '' : 'error'}\n        /* onClick={e => this.setState({isFocus: true})} */>\n\n        <label htmlFor={this.uniqIndex}>{this.objName}</label>\n        {this.props.elem.call(this, this)}\n\n      </li>\n    )\n  }\n}\n\nfunction input(arram) {\n  let type = arram;\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n    let backgroundPosition = this.state.backgroundPosition;\n\n    return((templateScope.readonly) \n      ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n      : <input key={uniqid()} type={type} defaultValue={this.state.defaultValue}\n          onFocus={e => this.afterFocus(e.target)} id={uniqIndex}\n          //onChange={e => enteredVal = e.target.value}  \n          onBlur={e => this.afterBlurTest(e.target)}\n          style={{backgroundPosition: backgroundPosition}} />)\n  }\n}\n\nfunction textArea (arram) {\n  let enteredVal = '';\n  let type = arram;\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return ((templateScope.readonly) \n          ? <textarea key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n          : <textarea key={uniqid()} type={type} defaultValue={enteredVal}\n              style={{backgroundPosition: this.state.backgroundPosition}}\n              onFocus={e => this.whileFocus(e)} id={uniqIndex}\n              onChange={e => enteredVal = e.target.value}\n              onBlur={e => this.afterBlurTest(e.target.value)}  />\n      )\n  }\n}\n\nfunction countryComp(arram) {\n  let type = arram;\n  let countryNamesArr = [];\n  let enteredVal = '';\n\n  fetch(`https://restcountries.eu/rest/v2/all`, {mode: 'cors'})\n    .then(response => response.json())\n    .then(response => countryNamesArr = response);\n\n  function createListElements() {\n    let collection = [];\n    const enteredItem = enteredVal;\n    const lowerCaseVal = enteredItem.toLowerCase();\n\n    for (const {name} of countryNamesArr) {\n      const lowerCaseName = name.toLowerCase();\n      if(enteredItem.length > 2 && lowerCaseName.includes(lowerCaseVal) && enteredItem !== name) {\n        collection.push({\n          name: name,\n        });\n      }\n    }\n    return collection;\n  }\n\n  function enteredValHandler(e) {\n    enteredVal = e.target.value;\n \n    let list = removeAllChildElements('cityName', 'li');\n    let htmlNodeCollection = createListElements();\n\n    htmlNodeCollection.forEach((elem, id) => {\n      let option = document.createElement('li');\n      option.textContent = elem.name;\n      option.key = id;\n      list.append(option);\n\n      option.addEventListener('mousedown', e => {\n        enteredVal = e.target.textContent;\n        new Promise(res => {\n          this.setState({\n            defaultValue: e.target.textContent,\n          })\n          res(this)\n        })\n        .then(() => removeAllChildElements('cityName', 'li'));\n      })\n    })\n  }\n\n  function removeAllChildElements(parentId, childTag) {\n    let list = document.getElementById(parentId);\n    let options = list.querySelectorAll(childTag);\n    options.forEach(elem => elem.remove());\n    return list;\n  }\n\n  function mouseDownListener(e) {\n    enteredVal = e.target.textContent;\n    this.setState({\n      defaultValue: e.target.textContent,\n    })\n  }\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return ((templateScope.readonly) \n        ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n        : <div>\n            <input type={type} key={uniqid()}\n              style={{backgroundPosition: this.state.backgroundPosition}}\n              onBlur={() => this.afterBlurTest(enteredVal)} \n              onChange={enteredValHandler.bind(this)}\n              defaultValue={enteredVal} id={uniqIndex} list='cityName'/>\n\n            <ul id='cityName'>\n              {createListElements().map((elem, id) => {\n                return (\n                <li key={id} onMouseDown={mouseDownListener.bind(this)}>{elem.name}</li>\n                )\n              })}\n            </ul>\n          </div>\n      )\n  }\n}\n\n/* function countryComp(arram) {\n  let type = arram;\n  let countryNamesArr = [];\n  let enteredVal = {\n    value: '',\n    id: uniqid(),\n  }\n\n  fetch(`https://restcountries.eu/rest/v2/all`, {mode: 'cors'})\n    .then(response => response.json())\n    .then(response => countryNamesArr = response);\n\n  function createListElements() {\n    let collection = [];\n    const enteredItem = enteredVal.value;\n    const lowerCaseVal = enteredItem.toLowerCase();\n\n    for (const {name} of countryNamesArr) {\n      const lowerCaseName = name.toLowerCase();\n      if(enteredItem.length > 2 && lowerCaseName.includes(lowerCaseVal) && enteredItem !== name) {\n        collection.push({\n          id: uniqid(),\n          name: name,\n        });\n      }\n    }\n    return collection;\n  }\n\n  function enteredValHandler(e) {\n    enteredVal.value = e.target.value;\n    enteredVal.id = uniqid();\n    new Promise(res => {\n      this.setState({\n        defaultValue: enteredVal.value,\n        isFocus: true,\n      })\n      res(this)\n    })\n    .then(response => {\n      let list = removeAllChildElements('cityName', 'li');\n      let htmlNodeCollection = createListElements();\n\n      htmlNodeCollection.forEach(elem => {\n        let option = document.createElement('li');\n        option.textContent = elem.name;\n        option.key = elem.id;\n        list.append(option);\n\n        option.addEventListener('mousedown', e => {\n          new Promise(res => {\n            response.setState({\n              defaultValue: e.target.textContent,\n            })\n            res(response)\n          })\n          .then(() => removeAllChildElements('cityName', 'li'));\n        })\n      })\n    })\n  }\n\n  function removeAllChildElements(parentId, childTag) {\n    let list = document.getElementById(parentId);\n    let options = list.querySelectorAll(childTag);\n    options.forEach(elem => elem.remove());\n    return list;\n  }\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return ((templateScope.readonly) \n        ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n        : <div>\n            <input type={type} key={uniqid()}\n              style={{backgroundPosition: this.state.backgroundPosition}}\n              onFocus={this.whileFocus()}\n              onBlur={e => this.afterBlur(e)} \n              onChange={enteredValHandler.bind(this)}\n              value={this.state.defaultValue} id={uniqIndex} list='cityName'/>\n\n            <ul id='cityName'></ul>\n          </div>\n      )\n  }\n} */\n\nexport {input, textArea, countryComp, InputComp};","function cloneObj(sourceObj) {\n  let newObj = {};\n  \n  for (const key in sourceObj) {\n    if (Array.isArray(sourceObj[key])) {\n      newObj[key] = [];\n      sourceObj[key].forEach(elem => newObj[key].push(cloneObj(elem)));\n\n    } else if (typeof sourceObj[key] !== 'object') {\n      newObj[key] = sourceObj[key];\n    } else {\n      newObj[key] = cloneObj(sourceObj[key]);\n    }\n  }\n  return newObj;\n}\n\n\n/* function cloneObj(sourceObj) {\n\n\nconsole.log(sourceObj)\n  let newObj = Object.create(Object.getPrototypeOf(sourceObj));\n\n  for (const key in sourceObj) {\n    if (Array.isArray(sourceObj[key])) {\n      newObj[key] = [];\n      sourceObj[key].forEach(elem => {\n        newObj[key].push(cloneObj(elem));\n      });\n    } else if (typeof sourceObj[key] !== 'object') {\n      newObj[key] = sourceObj[key];\n    } else {\n      newObj[key] = cloneObj(sourceObj[key]);\n    }\n  }\n  return newObj;\n  return sourceObj;\n} */\n\nexport default cloneObj","import React from 'react';\nimport changeHandler from './ChangeHandler';\nimport uniqid from 'uniqid';\nimport { InputComp } from './ComponentsForInputsElements/InputsComponents';\nimport cloneObj from './CloneObj';\n\nclass CreateListCompForTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scope = this.props.scope;\n    this.collectionInputElements = ((params) => {\n      return Object.values(props.subObj).map(elem => {\n        if (typeof elem === 'object') {\n          return elem.inputElem()\n        }\n      })\n    })()\n\n    this.state = {\n      idHtmlWithError: [],     // убрать\n      objKeys: {},             // убрать\n      collectionCompElem: [],  // убрать\n      countElemWithError: 0,\n    }\n  }\n\n  reduceArray(index) {\n    let interimArr = [...this.state.idHtmlWithError];\n    interimArr.splice(index, 1);\n    this.setState({\n      idHtmlWithError: interimArr\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  let initianArray = Object.values(this.props.subObj);\n  let array = [];\n\n    for (const iterator of initianArray) {\n      if (typeof iterator === 'object') {\n        array.push(iterator)\n      }\n    }\n\n    let checkThisProps = array.every(elem => {\n      return elem.value !== '';\n    });\n\n    this.props.subObj.isValid = checkThisProps ? true : false;\n  }\n\n  render() {\n    return (\n      <ul>\n        {Object.entries(this.props.subObj).map((item, id) => {\n          if (typeof item[1] === 'object') {\n            /* return <InputComp scope={this} array={item} elem={item[1].inputElem()} /> */\n            return <InputComp scope={this} array={item} elem={this.collectionInputElements[id]} />\n          } \n          return null;\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateListCompForTemplate;","import React from 'react';\nimport CreateListCompForTemplate from '../../../../additionalComponents/CreateListCompForTemplate';\n\nclass InfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.parentScope = props.parentScope;\n    this.personalInfo = this.parentScope.state.generalInfo;\n  }\n\n  render() {\n    let duplicateState = this.parentScope.state;\n    \n    return (\n      <div>\n        <h2>Personal information</h2>\n        <CreateListCompForTemplate subObj={duplicateState.generalInfo} obj={duplicateState} scope={this.parentScope}/>\n      </div>\n    )\n  }\n}\n\nexport default InfoBox","import React from 'react';\nimport cloneObj from '../../../../additionalComponents/CloneObj';\n\nclass PhotoComp extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.parentScope = props.parentScope;\n    this.url = undefined;\n  }\n\n  onFileSelected(e) {\n    const selectedFile = e.target.files[0];\n\n    if (selectedFile !== undefined) {\n      const reader = new FileReader();\n      const elemTag = document.querySelector('.photo');\n\n      reader.onload = (e) => {  \n        this.url = e.target.result;\n        elemTag.style.backgroundImage = `url(${this.url})`;\n\n        this.addPropertyInState()\n      }\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }\n\n  componentDidMount() {\n    this.addPropertyInState()\n  }\n\n  addPropertyInState() {\n    let clone = this.parentScope.state.generalInfo;\n    clone.Avatar = this.url;\n    this.parentScope.setState({\n      generalInfo: clone\n    });\n  }\n\n  render() {\n    return (\n      <div className='photo'>\n          <label><input type='file' onChange={this.onFileSelected.bind(this)}></input></label>\n      </div>\n    )\n  }\n}\n\nexport default PhotoComp;","import React from 'react'\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <input type='button' value={this.props.value}\n        onClick={() => {\n          this.props.func()\n        }}>\n      </input>\n    )\n  }\n}\n\nexport default Button","import React from 'react';\nimport Button from './ButtonComp';\n\nclass ButtonsSection extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.btns.map((elem, id) => {\n          return <Button type='button' value={elem.value} func={elem.func} key={id}/>\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ButtonsSection","function clickHandler(subObj, scope) {\n  scope.setState(subObj);\n}\n\nexport default clickHandler;","import cloneObj from \"../CloneObj\";\nimport clickHandler from \"../ClickHandler\";\n\nfunction createObj(duplicateState) {\n  let arrayOfKeysAndValues = Object.entries(duplicateState);\n\n  let objectWithProps = arrayOfKeysAndValues[0][1];\n  let arrayWithObjects = arrayOfKeysAndValues[1] ? arrayOfKeysAndValues[1][1] : null;\n\n  let array = [];\n\n  for (const key in objectWithProps) {\n    if (typeof objectWithProps[key] === 'object') {\n      array.push(objectWithProps[key])\n    }\n  }\n\n  let check = array.every(elem => elem.value !== '');\n\n  return {arrayOfKeysAndValues, objectWithProps, arrayWithObjects, check};\n}\n\nfunction addInfo(duplicateState) {\n  let {arrayOfKeysAndValues, objectWithProps, arrayWithObjects, check} = createObj(duplicateState);\n\n  if (check) {\n    arrayWithObjects.push(objectWithProps);\n\n    let name1 = arrayOfKeysAndValues[0][0];\n    let name2 = arrayOfKeysAndValues[1][0];\n\n    new Promise((res) => {\n      this.setState({\n        [name1]: cloneObj(this.defaultState),\n        [name2]: arrayWithObjects\n      })\n      res(this)\n    })\n    //.then(response => console.log(response.state))\n  } \n}\n\nfunction sendInfo(duplicateState, propName) {\n  let {objectWithProps, arrayWithObjects, check} = createObj(duplicateState);\n\n  let checkСondition = arrayWithObjects.find((elem) => {\n    return elem.isValid === false;\n  })\n\n  if (check && !checkСondition) {\n    arrayWithObjects.push(objectWithProps);\n\n    let subObj = {\n      [propName]: duplicateState,\n    }\n    \n    clickHandler(subObj, this.commonParentScope);\n  }\n}\n\nfunction sendSingleInformation(duplicateState) {\n  //console.log(duplicateState)\n  let {check} = createObj(duplicateState);\n\n  if (check) {\n    clickHandler(duplicateState, this.commonParentScope);\n  }\n}\n\nexport {addInfo, sendInfo, sendSingleInformation};","import React from 'react';\nimport InfoBox from './commonInfoComponents/InfoBox';\nimport PhotoComp from './commonInfoComponents/PhotoComp'\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport { input, countryComp } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\nimport { sendSingleInformation } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport cloneObj from '../../../additionalComponents/CloneObj';\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      generalInfo: {\n        Name: {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        Email: {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        Phone: {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        Country: {\n          value: '',\n          inputElem: countryComp.bind(this, 'text'),\n        },\n        \n        isValid: true,\n      }\n    }\n    \n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n  }\n\n  componentDidMount() {\n    this.parentScope.setState(this.state);\n  }\n  \n  render() {\n    return(\n      <section>\n        <form>\n          <div className='infoBlocks'>\n            <InfoBox parentScope={this}/>\n\n            <PhotoComp parentScope={this} />\n          </div>\n\n          <ButtonsSection btns={[\n            {\n              value: 'Add information', \n              func: sendSingleInformation.bind(this, this.state, 'generalInfo')\n            }\n          ]} />\n        </form>\n\n      </section>\n    )\n  }\n}\n\nexport default GeneralInfo;","import React from 'react'\nimport cloneObj from '../../../additionalComponents/CloneObj';\nimport CreateListCompForTemplate from '../../../additionalComponents/CreateListCompForTemplate';\nimport { addInfo, sendInfo } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport { input } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\n\nclass EducationalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      educationalExperience: {\n        'School name': {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        'Title of study': {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        'Date of study': {\n          value: '',\n          inputElem: input.bind(this, 'date'),\n        },\n\n        isValid: true,\n      },\n\n      educationalExperienceCollection: [],\n    }\n\n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n    this.defaultState = cloneObj(this.state.educationalExperience);\n  }\n\n  componentDidMount() {\n    this.parentScope.setState({educExp: cloneObj(this.state)});\n  }\n\n  render() {\n    let duplicateState = cloneObj(this.state);\n\n    return (\n      <section className='expBlock'>\n        <h2>Educational experience</h2>\n\n        <ul className='specialStyleKit'>\n          {duplicateState.educationalExperienceCollection.map((item, id) => {\n            //console.log(item)\n            return (\n              <li key={id}>\n                <CreateListCompForTemplate subObj={item} obj={duplicateState} scope={this}/>\n              </li>\n            )\n          })}\n        </ul>\n\n        <CreateListCompForTemplate subObj={duplicateState.educationalExperience} obj={duplicateState} scope={this}/>\n\n        <ButtonsSection btns={[\n          {\n            value: 'Add information', \n            func: sendInfo.bind(this, duplicateState, 'educExp')\n          },\n          {\n            value: 'Plus', \n            func: addInfo.bind(this, duplicateState)\n          }\n        ]}/>\n      </section>\n    )\n  }\n}\n\nexport default EducationalExperience;","import React from 'react';\nimport GeneralInfo from './compForTemplateCV/GeneralInfo';\nimport EducationalExperience from './compForTemplateCV/EducationalExperience';\nimport PracticalExperience from './compForTemplateCV/PracticalExperience';\n\nimport CloneObj from '../../additionalComponents/CloneObj';\n\nclass TemplateCV extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.commonParentScope = props.parentScope;\n  }\n\n  returnParentScope() {\n    return this;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState === null) {\n      this.commonParentScope.setState(CloneObj(this.state));\n    }\n  }\n\n  render() {\n    return(\n      <section id='templateCV'>\n        <GeneralInfo parentScope={this.returnParentScope.bind(this)}/>\n        <EducationalExperience parentScope={this.returnParentScope.bind(this)}/>\n        {/* <PracticalExperience parentScope={this.returnParentScope.bind(this)} /> */}\n      </section>\n    )\n  }\n}\n\nexport default TemplateCV;","import React from 'react';\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport cloneObj from '../../../additionalComponents/CloneObj';\nimport { textArea, input } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\nimport { addInfo, sendInfo } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport CreateListCompForTemplate from '../../../additionalComponents/CreateListCompForTemplate';\n\nclass PracticalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      practicalExperience: {\n        'Company name': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Position title': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Main tasks of your jobs': {\n          value: '',\n          inputElem: textArea('text'),\n        },\n        'From': {\n          value: '',\n          inputElem: input('date'),\n        },\n        'To': {\n          value: '',\n          inputElem: input('date'),\n        },\n\n        isValid: true,\n      },\n      practicalExperienceCollection: []\n    }\n\n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n    this.defaultState = cloneObj(this.state.practicalExperience);\n  }\n\n  componentDidMount() {\n    this.parentScope.setState({practicExp: cloneObj(this.state)});\n  }\n\n  render() {\n    let duplicateState = cloneObj(this.state);\n\n    return (\n      <section className='expBlock'>\n        <h2>Practical experience</h2>\n\n        <ul className='specialStyleKit'>\n          {duplicateState.practicalExperienceCollection.map((item, id) => {\n              return (\n                <li key={id}>\n                  <CreateListCompForTemplate subObj={item} obj={duplicateState} scope={this}/>\n                </li>\n              )\n            })}\n        </ul>\n\n        <CreateListCompForTemplate subObj={duplicateState.practicalExperience} obj={duplicateState} scope={this}/>\n\n        <ButtonsSection btns={[\n            {\n              value: 'Add information', \n              func: sendInfo.bind(this, duplicateState, 'practicExp')\n            },\n            {\n              value: 'Plus', \n              func: addInfo.bind(this, duplicateState)\n            }\n          ]} />\n      </section>\n    )\n  }\n}\n\nexport default PracticalExperience;","import React from 'react';\nimport { InputComp } from '../ComponentsForInputsElements/InputsComponents';\n\nclass CreateListCompForPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readonly = true;\n  }\n\n  render() {\n    return (\n      <ul>\n        {Object.entries(this.props.obj).map((item, id) => {\n          if (typeof item[1] === 'object') {\n            return <InputComp key={id} scope={this} array={item} elem={item[1].inputElem} />\n          }\n          return null;\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateListCompForPreview;","export default __webpack_public_path__ + \"static/media/emptyAvatar.5320030d.jpg\";","import React from 'react';\nimport emptyAvatar from '../../../../../images/emptyAvatar.jpg'\n\nclass PhotoBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: emptyAvatar\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props && this.props.obj !== undefined) {\n      this.setState({url: this.props.obj});\n    }\n  }\n\n  render() {\n    return (\n      <div id='photoBlock' style={{backgroundImage: `url(${this.state.url})`}}></div>\n    )\n  }\n}\n\nexport default PhotoBlock;","import React from 'react';\nimport CloneObj from '../../../additionalComponents/CloneObj';\nimport CreateListCompForPreview from '../../../additionalComponents/componentsForOuputPreviewInfo/CreateListCompForPreview';\nimport PhotoBlock from './compForOutputPersonalInfo/PhotoBlockComp';\n\nclass OutputPersonalInfo extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState(CloneObj(this.props.parentState))\n    }\n  }\n\n  render() {\n    return (\n      <div id='personalInformation'>\n\n        <PhotoBlock obj={this.props.parentState.generalInfo.Avatar}/>\n\n        <form>\n          <h2>Personal information</h2>\n          <CreateListCompForPreview obj={this.props.parentState.generalInfo}/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default OutputPersonalInfo;","import React from 'react';\nimport CreateListCompForPreview from './CreateListCompForPreview';\n\nclass CreateCollectionComp extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.array.map((item, id) => {\n          return (\n            <li key={id} className='ExpBlock'>\n              <CreateListCompForPreview obj={item}/>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateCollectionComp;","import React from 'react';\nimport CreateCollectionComp from './CreateCollectionComp';\nimport CreateListCompForPreview from './CreateListCompForPreview';\n\nclass OutputInfoComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readonly = true;\n  }\n\n  render() {\n    let array = Object.entries(this.props.obj),\n        collectionPractic = array[1][1],\n        templatePractic = array[0][1],\n        renderComp = (collectionPractic.length) \n                ? <CreateCollectionComp array={collectionPractic}/> \n                : <CreateListCompForPreview obj={templatePractic}/>;     \n    \n    return (\n      <div>\n        <h2>{this.props.headline}</h2>\n\n        {renderComp}\n      </div>\n    )\n  }\n}\n\nexport default OutputInfoComp;","import React from 'react';\nimport OutputInfoComp from '../../../additionalComponents/componentsForOuputPreviewInfo/OutputInfoComp';\n\nclass CommonInformation extends React.Component {\n  componentDidMount() {\n    this.setState(this.props.obj);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n        this.setState(this.props.obj);\n      }\n  }\n\n  render() {\n    return (\n      <div id='commonInformation'>\n        <OutputInfoComp obj={this.props.obj.educExp} headline='Educational experience'/>\n        <OutputInfoComp obj={this.props.obj.practicExp} headline='Educational experience'/>\n      </div>\n    )\n  }\n}\n\nexport default CommonInformation;","import React from 'react';\nimport TemplateCV from './components/templateCV/TemplateCV';\nimport PreviewCV from './components/previewCV/PreviewCV';\n\nclass CommonParentComponent extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <TemplateCV parentScope={this} />\n        {/* <PreviewCV parentScope={this}/> */}\n      </div>\n    )\n  }\n}\n\nexport default CommonParentComponent","import React from 'react';\nimport OutputPersonalInfo from './personalInfoBlock/OutputPersonalInfo';\nimport CloneObj from '../../additionalComponents/CloneObj';\nimport CommonInformation from './commonInformation/CommonInformationComp';\n\nclass PreviewCV extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.CommonParentScope = props.parentScope;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState === this.state) {\n      this.setState(CloneObj(this.CommonParentScope.state));\n    }\n  }\n\n  render() {\n    return (\n      <section id='previewCV'>\n        {this.state && <CommonInformation obj={this.state}/>}\n\n        {this.state && <OutputPersonalInfo parentState={this.state} />}\n      </section>\n    )\n  }\n}\n\nexport default PreviewCV","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './headerComponent/Header'\nimport style from './style.css'\nimport CommonParentComponent from './commonComponents/CommonParentComponent'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <CommonParentComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}