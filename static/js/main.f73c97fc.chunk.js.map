{"version":3,"sources":["images/сonstructor.jpg","headerComponent/Header.js","commonComponents/additionalComponents/ChangeHandler.js","commonComponents/additionalComponents/CloneObj.js","commonComponents/additionalComponents/ComponentsForInputsElements/InputsComponents.js","commonComponents/additionalComponents/CreateListCompForTemplate.js","commonComponents/components/templateCV/compForTemplateCV/commonInfoComponents/InfoBox.js","commonComponents/components/templateCV/compForTemplateCV/commonInfoComponents/PhotoComp.js","commonComponents/additionalComponents/componentsForButtonSection/ButtonComp.js","commonComponents/additionalComponents/componentsForButtonSection/ButtonsSectionComp.js","commonComponents/additionalComponents/ClickHandler.js","commonComponents/additionalComponents/componentsForButtonSection/functionsForButtons.js","commonComponents/components/templateCV/compForTemplateCV/GeneralInfo.js","commonComponents/components/templateCV/compForTemplateCV/EducationalExperience.js","commonComponents/components/templateCV/compForTemplateCV/PracticalExperience.js","commonComponents/components/templateCV/TemplateCV.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/CreateListCompForPreview.js","images/emptyAvatar.jpg","commonComponents/components/previewCV/personalInfoBlock/compForOutputPersonalInfo/PhotoBlockComp.js","commonComponents/components/previewCV/personalInfoBlock/OutputPersonalInfo.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/CreateCollectionComp.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/OutputInfoComp.js","commonComponents/components/previewCV/commonInformation/CommonInformationComp.js","commonComponents/components/previewCV/PreviewCV.js","commonComponents/CommonParentComponent.js","index.js"],"names":["Header","className","src","constructor","alt","React","Component","changeHandler","cloneObj","sourceObj","newObj","key","Array","isArray","forEach","elem","push","InputComp","props","uniqIndex","uniqid","parentScope","scope","objName","array","state","isValidValue","isFocus","defaultValue","e","target","value","length","Promise","res","setState","then","response","subObj","obj","console","log","prevStateElem","countElemWithError","prevProps","this","document","getElementById","focus","nextProps","nextState","htmlFor","call","input","arram","type","templateScope","readonly","readOnly","onBlur","afterBlur","onFocus","whileFocus","id","textArea","countryComp","countryNamesArr","enteredVal","enteredValHandler","collection","enteredItem","lowerCaseVal","toLowerCase","name","lowerCaseName","includes","createListElements","list","option","createElement","textContent","append","addEventListener","querySelectorAll","remove","fetch","mode","json","onChange","CreateListCompForTemplate","idHtmlWithError","objKeys","collectionCompElem","index","interimArr","splice","Object","entries","map","item","inputElem","InfoBox","personalInfo","generalInfo","duplicateState","PhotoComp","url","undefined","selectedFile","files","reader","FileReader","elemTag","querySelector","onload","result","style","backgroundImage","addPropertyInState","readAsDataURL","clone","Avatar","onFileSelected","bind","Button","onClick","func","ButtonsSection","btns","clickHandler","createObj","arrayOfKeysAndValues","objectWithProps","arrayWithObjects","check","every","addInfo","name1","name2","defaultState","sendInfo","propName","checkСondition","find","isValid","commonParentScope","sendSingleInformation","GeneralInfo","Name","Email","Phone","Country","EducationalExperience","educationalExperience","educationalExperienceCollection","educExp","PracticalExperience","practicalExperience","practicalExperienceCollection","practicExp","TemplateCV","prevState","CloneObj","returnParentScope","CreateListCompForPreview","PhotoBlock","emptyAvatar","OutputPersonalInfo","parentState","CreateCollectionComp","OutputInfoComp","collectionPractic","templatePractic","renderComp","headline","CommonInformation","PreviewCV","CommonParentScope","CommonParentComponent","returnCommonParentComponent","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f73c97fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/сonstructor.13325f3d.jpg\";","import React from 'react';\nimport constructor from '../images/сonstructor.jpg';\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <header>\n        <div className='container'>\n          <img src={constructor} alt=''></img>\n          <h1>CV Сonstructor</h1>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import addPropertiesInState from \"./AddPropertiesInState\";\n\nfunction changeHandler(e, subObj) {\n  if (e.target.value.length > 0 && ![...e.target.classList].includes('active')) {\n    e.target.classList.add('active');\n  } else if (!e.target.value.length) {\n    e.target.classList.remove('active');\n  }\n\n  return addPropertiesInState.call(this, e, subObj)\n}\n\nexport default changeHandler;","function cloneObj(sourceObj) {\n  let newObj = {};\n  \n  for (const key in sourceObj) {\n    if (Array.isArray(sourceObj[key])) {\n      newObj[key] = [];\n      sourceObj[key].forEach(elem => newObj[key].push(cloneObj(elem)));\n\n    } else if (typeof sourceObj[key] !== 'object') {\n      newObj[key] = sourceObj[key];\n    } else {\n      newObj[key] = cloneObj(sourceObj[key]);\n    }\n  }\n  return newObj;\n}\n\n\n/* function cloneObj(sourceObj) {\n\n\nconsole.log(sourceObj)\n  let newObj = Object.create(Object.getPrototypeOf(sourceObj));\n\n  for (const key in sourceObj) {\n    if (Array.isArray(sourceObj[key])) {\n      newObj[key] = [];\n      sourceObj[key].forEach(elem => {\n        newObj[key].push(cloneObj(elem));\n      });\n    } else if (typeof sourceObj[key] !== 'object') {\n      newObj[key] = sourceObj[key];\n    } else {\n      newObj[key] = cloneObj(sourceObj[key]);\n    }\n  }\n  return newObj;\n  return sourceObj;\n} */\n\nexport default cloneObj","import React from 'react';\nimport uniqid from 'uniqid'\nimport cloneObj from '../CloneObj';\n\nclass InputComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uniqIndex = uniqid();\n    this.parentScope = props.scope;\n    this.objName = props.array[0];\n\n    this.state = {\n      isValidValue: true,\n      isFocus: false,\n      defaultValue: '',\n    }\n  }\n\n  afterBlur(e, props) {\n    if (!e.target.value.length) {\n      new Promise(res => {\n        this.setState({\n          isValidValue: false,\n          isFocus: false,\n          defaultValue: '',\n        });\n        res(this.parentScope)\n      })\n      .then(response => {\n        let prevStateElem = response.state.countElemWithError;\n        response.setState({countElemWithError: --prevStateElem});\n      })\n    } else {\n      new Promise(res => {\n        this.setState({\n          isValidValue: true,\n          isFocus: false,\n          defaultValue: e.target.value,\n        });\n        res(this.parentScope);\n      })\n      .then(response => {\n        response.props.subObj[this.objName].value = this.state.defaultValue;\n        response.scope.setState(response.props.obj);\n        return response\n      })\n      .then(response => {\n        console.log(response.scope)\n        //console.log(this.state.defaultValue)\n        let prevStateElem = response.state.countElemWithError;\n        response.setState({countElemWithError: ++prevStateElem});\n        return response;\n      })\n\n\n\n/*       new Promise(res => {\n        this.setState({\n          isValidValue: true,\n          isFocus: false,\n          defaultValue: e.target.value,\n        });\n        res(this.parentScope);\n      })\n      .then(response => {///\n        //console.log(this.state.defaultValue)\n        let prevStateElem = response.state.countElemWithError;\n        response.setState({countElemWithError: ++prevStateElem});\n        return response;\n      })\n      .then(response => {///\n        response.props.subObj[this.objName].value = this.state.defaultValue;\n        response.scope.setState(response.props.obj);\n        return response\n      })\n      .then(response => {\n        console.log(response.scope);\n        console.log(response.scope.state);\n      }) */\n\n      // почему-то subObj не относится к obj\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n/*     if (prevProps !== this.props) {\n    //if (prevProps.array[1].value !== this.props.array[1].value) {\n      //console.log('hel')\n      new Promise(res => {\n        this.setState({defaultValue: this.props.array[1].value});\n        res(this)\n      })\n      //.then(response => console.log(response.state))\n    } */\n \n    if (this.state.isFocus) {\n      let input = document.getElementById(this.uniqIndex);\n      input.focus();\n    }\n  }\n\n  whileFocus(e) {\n    if (!this.state.isValidValue) {\n      this.setState({\n        isValidValue: true,\n        isFocus: true,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props === nextProps && this.state === nextState) {\n      return false;\n    } \n    return true;\n  }\n\n  render() {\n    return (\n      <li className={this.state.isValidValue ? '' : 'error'}>\n        <label htmlFor={this.uniqIndex}>{this.objName}</label>\n        {this.props.elem.call(this, this)}\n      </li>\n    )\n  }\n}\n\nfunction input(arram) {\n  let type = arram;\n\n  return function (props) {\n    let templateScope = props.parentScope;\n    let uniqIndex = props.uniqIndex;\n\n    if (templateScope.readonly) {\n      return <input type={type} value={this.props.array[1].value} readOnly />\n    } else {\n      return (\n        <input key={uniqid()} type={type} onBlur={(e) => {\n          props.afterBlur(e);\n        }}\n        onFocus={(e) => {\n          props.whileFocus(e);\n        }}\n        id={uniqIndex} defaultValue={this.props.array[1].value} />\n      )\n    }\n  }\n}\n\nfunction textArea (arram) {\n  let type = arram;\n\n  return function (props) {\n    let templateScope = props.parentScope;\n    let uniqIndex = props.uniqIndex;\n\n  return ((templateScope.readonly) \n        ? <textarea type={type} value={this.props.array[1].value} readOnly />\n        : <textarea type={type} onBlur={(e) => {\n          props.afterBlur(e);\n        }}\n        onFocus={(e) => {\n          props.whileFocus(e);\n        }}\n        id={uniqIndex} defaultValue={props.state.defaultValue} />\n      )\n  }\n}\n\nfunction countryComp(arram) {\n  let type = arram;\n  let countryNamesArr = [];\n  let enteredVal = {\n    value: '',\n    id: uniqid(),\n  }\n\n  fetch(`https://restcountries.eu/rest/v2/all`, {mode: 'cors'})\n    .then(response => response.json())\n    .then(response => countryNamesArr = response);\n\n  function createListElements() {\n    let collection = [];\n    const enteredItem = enteredVal.value;\n    const lowerCaseVal = enteredItem.toLowerCase();\n\n    for (const {name} of countryNamesArr) {\n      const lowerCaseName = name.toLowerCase();\n      if(enteredItem.length > 2 && lowerCaseName.includes(lowerCaseVal) && enteredItem !== name) {\n        collection.push({\n          id: uniqid(),\n          name: name,\n        });\n      }\n    }\n    return collection;\n  }\n\n  function enteredValHandler(e) {\n    enteredVal.value = e.target.value;\n    enteredVal.id = uniqid();\n    new Promise(res => {\n      this.setState({\n        defaultValue: enteredVal.value,\n        isFocus: true,\n      })\n      res(this)\n    })\n    .then(response => {\n      let htmlNodeCollection = createListElements();\n\n      htmlNodeCollection.forEach(elem => {\n        let list = document.getElementById('cityName'); //\n        let option = document.createElement('li');\n        option.textContent = elem.name;\n        option.key = elem.id;\n        list.append(option);\n\n        option.addEventListener('click', (e) => {\n          new Promise(res => {\n            response.setState({\n              defaultValue: e.target.textContent,\n            })\n            res(response)\n          })\n          .then(() => {\n            let list = document.getElementById('cityName');\n            let options = list.querySelectorAll('li');\n\n            options.forEach(elem => elem.remove());\n          })\n        })\n\n      })\n      return response;\n    })\n  }\n\n  return function (props) {\n    let templateScope = props.parentScope;\n    let uniqIndex = props.uniqIndex;\n\n    return ((templateScope.readonly) \n        ? <input type={type} value={this.props.array[1].value} readOnly />\n        : <div>\n            <input type={type} \n            onBlur={(e) => {\n              props.afterBlur(e);\n            }} \n            onChange={(e) => {\n              enteredValHandler.call(this, e);\n            }}\n            value={this.state.defaultValue} id={uniqIndex} list='cityName'/>\n            <ul id='cityName'></ul>\n          </div>\n      )\n  }\n}\n\nexport {input, textArea, countryComp, InputComp};","import React from 'react';\nimport changeHandler from './ChangeHandler';\nimport uniqid from 'uniqid';\nimport { InputComp } from './ComponentsForInputsElements/InputsComponents';\n\nclass CreateListCompForTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scope = this.props.scope;\n\n    this.state = {\n      idHtmlWithError: [],     // убрать\n      objKeys: {},             // убрать\n      collectionCompElem: [],  // убрать\n      countElemWithError: 0,\n    }\n  }\n\n  reduceArray(index) {\n    let interimArr = [...this.state.idHtmlWithError];\n    interimArr.splice(index, 1);\n    this.setState({\n      idHtmlWithError: interimArr\n    })\n  }\n\n  render() {\n    return (\n      <ul>\n        {Object.entries(this.props.subObj).map(item => {\n          if (typeof item[1] === 'object') {\n            return <InputComp scope={this} array={item} elem={item[1].inputElem} />\n          } \n          return null;\n        })}\n      </ul>\n    )\n  }\n}\n\n/* class CreateListCompForTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scope = this.props.scope;\n\n    this.state = {\n      idHtmlWithError: [],\n      objProps: this.returnObj(props)\n    }\n  }\n\n  returnObj(props) {\n    for (const key in props.subObj) {\n      if (typeof props.subObj[key] === 'object') {\n        props.subObj[key].uniqIndex = uniqid();\n      }\n    }\n    return props;\n  }\n\n  click(e, id) {\n    if (this.state.idHtmlWithError.includes(id)) {\n      if (e.target.localName === 'li') {\n        e.target.classList.remove('error');\n        let input = e.target.lastChild;\n        input.classList.add('afterError')\n        input.focus();\n      } else if (e.target.localName === 'input') {\n        e.target.parentNode.classList.remove('error');\n        e.target.classList.add('afterError')\n      }\n    }\n  }\n\n  blur(e, childScope) {\n    let obj = this.state.objProps.obj;\n    let subObj = this.state.objProps.subObj;\n    let childObj = subObj[childScope.objName];\n    let id = childObj.uniqIndex;\n\n    changeHandler.call(obj, e, childObj);\n\n    if (e.target.value) {         \n      new Promise(res => {\n        let index = this.state.idHtmlWithError.indexOf(id);\n\n        if (index !== -1) {\n          this.reduceArray(index);\n        }\n        res(this)\n      })\n      .then(response => {\n        if (response.state.idHtmlWithError.length === 0) {\n          subObj.isValid = true;\n          response.scope.setState(obj);\n        }\n      })\n\n    } else {\n      e.target.parentNode.classList.add('error');\n      new Promise(res => {\n        this.setState({\n          idHtmlWithError: [...this.state.idHtmlWithError, id],\n        })\n        res(this);\n      })\n      .then(response => {\n        subObj.isValid = false;\n        response.scope.setState(obj);\n      })\n    }\n  }\n\n  reduceArray(index) {\n    let interimArr = [...this.state.idHtmlWithError];\n    interimArr.splice(index, 1);\n    this.setState({\n      idHtmlWithError: interimArr\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      for (const key in this.props.subObj) {\n        if (typeof this.props.subObj[key] === 'object') {\n          this.props.subObj[key].uniqIndex = this.state.objProps.subObj[key].uniqIndex;\n        }\n      }\n      this.setState({\n        objProps: this.props,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <ul>\n        {Object.entries(this.state.objProps.subObj).map(item => {\n          if (typeof item[1] === 'object') {\n            let myOwnClassName = this.state.idHtmlWithError.includes(item[1].uniqIndex) ? 'error' : '';\n            return (\n              <li key={uniqid()} className={myOwnClassName}\n                onClick={e => this.click(e, item[1].uniqIndex)}>\n\n                <label htmlFor={item[1].uniqIndex}>{item[0]}</label>\n                {item[1].returnInputElem.call(this, item)}\n              </li>\n            )\n          } \n          return null;\n        })}\n      </ul>\n    )\n  }\n} */\n\nexport default CreateListCompForTemplate;","import React from 'react';\nimport CreateListCompForTemplate from '../../../../additionalComponents/CreateListCompForTemplate';\n\nclass InfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.parentScope = props.parentScope;\n    this.personalInfo = this.parentScope.state.generalInfo;\n  }\n\n  render() {\n    let duplicateState = this.parentScope.state;\n    \n    return (\n      <div>\n        <h2>Personal information</h2>\n        <CreateListCompForTemplate subObj={duplicateState.generalInfo} obj={duplicateState} scope={this.parentScope}/>\n      </div>\n    )\n  }\n}\n\nexport default InfoBox","import React from 'react';\nimport cloneObj from '../../../../additionalComponents/CloneObj';\n\nclass PhotoComp extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.parentScope = props.parentScope;\n    this.url = undefined;\n  }\n\n  onFileSelected(e) {\n    const selectedFile = e.target.files[0];\n\n    if (selectedFile !== undefined) {\n      const reader = new FileReader();\n      const elemTag = document.querySelector('.photo');\n\n      reader.onload = (e) => {  \n        this.url = e.target.result;\n        elemTag.style.backgroundImage = `url(${this.url})`;\n\n        this.addPropertyInState()\n      }\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }\n\n  componentDidMount() {\n    this.addPropertyInState()\n  }\n\n  addPropertyInState() {\n    /* let duplicateObj = cloneObj(this.parentScope.state);\n    duplicateObj.generalInfo.Avatar = this.url;\n\n    this.parentScope.setState(duplicateObj); */\n    //console.log(this.parentScope.state)\n    let clone = this.parentScope.state.generalInfo;\n    clone.Avatar = this.url;\n    this.parentScope.setState({\n      generalInfo: clone\n    });\n  }\n\n  render() {\n    return (\n      <div className='photo'>\n          <label><input type='file' onChange={this.onFileSelected.bind(this)}></input></label>\n      </div>\n    )\n  }\n}\n\nexport default PhotoComp;","import React from 'react'\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <input type='button' value={this.props.value}\n        onClick={() => {\n          this.props.func()\n        }}>\n      </input>\n    )\n  }\n}\n\nexport default Button","import React from 'react';\nimport Button from './ButtonComp';\n\nclass ButtonsSection extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.btns.map((elem, id) => {\n          return <Button type='button' value={elem.value} func={elem.func} key={id}/>\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ButtonsSection","function clickHandler(subObj, scope) {\n  scope.setState(subObj);\n}\n\nexport default clickHandler;","import cloneObj from \"../CloneObj\";\nimport clickHandler from \"../ClickHandler\";\n\nfunction createObj(duplicateState) {\n  let arrayOfKeysAndValues = Object.entries(duplicateState);\n\n  let objectWithProps = arrayOfKeysAndValues[0][1];\n  let arrayWithObjects = arrayOfKeysAndValues[1] ? arrayOfKeysAndValues[1][1] : null;\n\n  let array = [];\n\n  for (const key in objectWithProps) {\n    if (typeof objectWithProps[key] === 'object') {\n      array.push(objectWithProps[key])\n    }\n  }\n\n  let check = array.every(elem => elem.value !== '');\n\n  return {arrayOfKeysAndValues, objectWithProps, arrayWithObjects, check};\n}\n\nfunction addInfo(duplicateState) {\n  let {arrayOfKeysAndValues, objectWithProps, arrayWithObjects, check} = createObj(duplicateState);\n\n  if (check) {\n    arrayWithObjects.push(objectWithProps);\n\n    let name1 = arrayOfKeysAndValues[0][0];\n    let name2 = arrayOfKeysAndValues[1][0];\n\n    new Promise((res) => {\n      this.setState({\n        [name1]: cloneObj(this.defaultState),\n        [name2]: arrayWithObjects\n      })\n      res(this)\n    })\n    //.then(response => console.log(response.state))\n  } \n}\n\nfunction sendInfo(duplicateState, propName) {\n  let {objectWithProps, arrayWithObjects, check} = createObj(duplicateState);\n\n  let checkСondition = arrayWithObjects.find((elem) => {\n    return elem.isValid === false;\n  })\n\n  if (check && !checkСondition) {\n    arrayWithObjects.push(objectWithProps);\n\n    let subObj = {\n      [propName]: duplicateState,\n    }\n    \n    clickHandler(subObj, this.commonParentScope);\n  }\n}\n\nfunction sendSingleInformation(duplicateState) {\n  //console.log(duplicateState)\n  let {check} = createObj(duplicateState);\n\n  if (check) {\n    clickHandler(duplicateState, this.commonParentScope);\n  }\n}\n\nexport {addInfo, sendInfo, sendSingleInformation};","import React from 'react';\nimport InfoBox from './commonInfoComponents/InfoBox';\nimport PhotoComp from './commonInfoComponents/PhotoComp'\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport { input, countryComp } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\nimport { sendSingleInformation } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport cloneObj from '../../../additionalComponents/CloneObj';\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      generalInfo: {\n        Name: {\n          value: '',\n          inputElem: input('text'),\n        },\n        Email: {\n          value: '',\n          inputElem: input('text'),\n        },\n        Phone: {\n          value: '',\n          inputElem: input('text'),\n        },\n        Country: {\n          value: '',\n          inputElem: countryComp('text'),\n        },\n      }\n    }\n    \n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n  }\n\n  componentDidMount() {\n    this.parentScope.setState(this.state);\n  }\n\n/*   componentDidUpdate(prevProps, prevState) {\n    console.log(prevState);\n    console.log(this.state);\n  } */\n  \n  render() {\n    return(\n      <section>\n        <form>\n          <div className='infoBlocks'>\n            <InfoBox parentScope={this}/>\n\n            <PhotoComp parentScope={this} />\n          </div>\n\n          <ButtonsSection btns={[\n            {\n              value: 'Add information', \n              func: sendSingleInformation.bind(this, this.state, 'generalInfo')\n            }\n          ]} />\n        </form>\n\n      </section>\n    )\n  }\n}\n\nexport default GeneralInfo;","import React from 'react'\nimport cloneObj from '../../../additionalComponents/CloneObj';\nimport CreateListCompForTemplate from '../../../additionalComponents/CreateListCompForTemplate';\nimport { addInfo, sendInfo } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport { input } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\n\nclass EducationalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      educationalExperience: {\n        'School name': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Title of study': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Date of study': {\n          value: '',\n          inputElem: input('date'),\n        },\n\n        isValid: true,\n      },\n      /* educationalExperience: {\n        'School name': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='text' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        },\n        'Title of study': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='text' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        },\n        'Date of study': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='date' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        },\n\n        isValid: true,\n      }, */\n      /* educationalExperience: {\n        'School name': {\n          value: '',\n          returnInputElem(childObj) {\n            return <Input type='text' obj={childObj} parentScope={this}/>\n          }\n        },\n        'Title of study': {\n          value: '',\n          returnInputElem(childObj) {\n            return <Input type='text' obj={childObj} parentScope={this}/>\n          }\n        },\n        'Date of study': {\n          value: '',\n          returnInputElem(childObj) {\n            return <Input type='date' obj={childObj} parentScope={this}/>\n          }\n        },\n\n        isValid: true,\n      }, */\n\n      educationalExperienceCollection: [],\n    }\n\n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n    this.defaultState = cloneObj(this.state.educationalExperience);\n  }\n\n  componentDidMount() {\n    this.parentScope.setState({educExp: cloneObj(this.state)});\n  }\n\n  render() {\n    let duplicateState = cloneObj(this.state);\n\n    return (\n      <section className='expBlock'>\n        <h2>Educational experience</h2>\n\n        <ul className='specialStyleKit'>\n          {duplicateState.educationalExperienceCollection.map((item, id) => {\n            //console.log(item)\n            return (\n              <li key={id}>\n                <CreateListCompForTemplate subObj={item} obj={duplicateState} scope={this}/>\n              </li>\n            )\n          })}\n        </ul>\n\n        <CreateListCompForTemplate subObj={duplicateState.educationalExperience} obj={duplicateState} scope={this}/>\n\n        <ButtonsSection btns={[\n          {\n            value: 'Add information', \n            func: sendInfo.bind(this, duplicateState, 'educExp')\n          },\n          {\n            value: 'Plus', \n            func: addInfo.bind(this, duplicateState)\n          }\n        ]}/>\n      </section>\n    )\n  }\n}\n\nexport default EducationalExperience;","import React from 'react';\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport cloneObj from '../../../additionalComponents/CloneObj';\nimport { textArea, input } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\nimport { addInfo, sendInfo } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport CreateListCompForTemplate from '../../../additionalComponents/CreateListCompForTemplate';\n\nclass PracticalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      practicalExperience: {\n        'Company name': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Position title': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Main tasks of your jobs': {\n          value: '',\n          inputElem: textArea('text'),\n        },\n        'From': {\n          value: '',\n          inputElem: input('date'),\n        },\n        'To': {\n          value: '',\n          inputElem: input('date'),\n        },\n      /* practicalExperience: {\n        'Company name': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='text' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              //console.log(htmlElem)\n              return htmlElem;\n            }\n          })()\n        },\n        'Position title': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='text' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        },\n        'Main tasks of your jobs': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <TextArea type='text' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        },\n        'From': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='date' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        },\n        'To': {\n          value: '',\n          returnInputElem: (function() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='date' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          })()\n        }, */\n\n        isValid: true,\n      },\n      /* practicalExperience: {\n        'Company name': {\n          value: '',\n          returnInputElem() {\n            let context;\n            let childObj;\n            let htmlElem = <Input type='text' obj={childObj} parentScope={context}/>\n            return function (arram) {\n              context = this;\n              childObj = arram;\n              return htmlElem;\n            }\n          }\n        },\n        'Position title': {\n          value: '',\n          returnInputElem(childObj) {\n            return <Input type='text' obj={childObj} parentScope={this}/>\n          }\n        },\n        'Main tasks of your jobs': {\n          value: '',\n          returnInputElem(childObj) {\n            return <TextArea obj={childObj} parentScope={this}/>\n          }\n        },\n        'From': {\n          value: '',\n          returnInputElem(childObj) {\n            return <Input type='date' obj={childObj} parentScope={this}/>\n          }\n        },\n        'To': {\n          value: '',\n          returnInputElem(childObj) {\n            return <Input type='date' obj={childObj} parentScope={this}/>\n          }\n        },\n\n        isValid: true,\n      }, */\n\n      practicalExperienceCollection: []\n    }\n\n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n    this.defaultState = cloneObj(this.state.practicalExperience);\n  }\n\n  componentDidMount() {\n    this.parentScope.setState({practicExp: cloneObj(this.state)});\n  }\n\n  render() {\n    let duplicateState = cloneObj(this.state);\n\n    return (\n      <section className='expBlock'>\n        <h2>Practical experience</h2>\n\n        <ul className='specialStyleKit'>\n          {duplicateState.practicalExperienceCollection.map((item, id) => {\n              return (\n                <li key={id}>\n                  <CreateListCompForTemplate subObj={item} obj={duplicateState} scope={this}/>\n                </li>\n              )\n            })}\n        </ul>\n\n        <CreateListCompForTemplate subObj={duplicateState.practicalExperience} obj={duplicateState} scope={this}/>\n\n        <ButtonsSection btns={[\n            {\n              value: 'Add information', \n              func: sendInfo.bind(this, duplicateState, 'practicExp')\n            },\n            {\n              value: 'Plus', \n              func: addInfo.bind(this, duplicateState)\n            }\n          ]} />\n      </section>\n    )\n  }\n}\n\nexport default PracticalExperience;","import React from 'react';\nimport GeneralInfo from './compForTemplateCV/GeneralInfo';\nimport EducationalExperience from './compForTemplateCV/EducationalExperience';\nimport PracticalExperience from './compForTemplateCV/PracticalExperience';\n\nimport CloneObj from '../../additionalComponents/CloneObj';\n\nclass TemplateCV extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.commonParentScope = props.parentScope();\n  }\n\n  returnParentScope() {\n    return this;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState === null) {\n      this.commonParentScope.setState(CloneObj(this.state));\n    }\n  }\n\n  render() {\n    return(\n      <section id='templateCV'>\n        <GeneralInfo parentScope={this.returnParentScope.bind(this)}/>\n        <EducationalExperience parentScope={this.returnParentScope.bind(this)}/>\n        <PracticalExperience parentScope={this.returnParentScope.bind(this)} />\n      </section>\n    )\n  }\n}\n\nexport default TemplateCV;","import React from 'react';\nimport { InputComp } from '../ComponentsForInputsElements/InputsComponents';\n\nclass CreateListCompForPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readonly = true;\n  }\n\n  render() {\n    //console.log(this.props)\n    return (\n      <ul>\n        {Object.entries(this.props.obj).map((item, id) => {\n          //console.log(item[1].value)\n          if (typeof item[1] === 'object') {\n            return <InputComp key={id} scope={this} array={item} elem={item[1].inputElem} />\n          }\n          return null;\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateListCompForPreview;","export default __webpack_public_path__ + \"static/media/emptyAvatar.5320030d.jpg\";","import React from 'react';\nimport emptyAvatar from '../../../../../images/emptyAvatar.jpg'\n\nclass PhotoBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: emptyAvatar\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props && this.props.obj !== undefined) {\n      this.setState({url: this.props.obj});\n    }\n  }\n\n  render() {\n    return (\n      <div id='photoBlock' style={{backgroundImage: `url(${this.state.url})`}}></div>\n    )\n  }\n}\n\nexport default PhotoBlock;","import React from 'react';\nimport CloneObj from '../../../additionalComponents/CloneObj';\nimport CreateListCompForPreview from '../../../additionalComponents/componentsForOuputPreviewInfo/CreateListCompForPreview';\nimport PhotoBlock from './compForOutputPersonalInfo/PhotoBlockComp';\n\nclass OutputPersonalInfo extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState(CloneObj(this.props.parentState))\n    }\n  }\n\n  render() {\n    return (\n      <div id='personalInformation'>\n\n        <PhotoBlock obj={this.props.parentState.generalInfo.Avatar}/>\n\n        <form>\n          <h2>Personal information</h2>\n          <CreateListCompForPreview obj={this.props.parentState.generalInfo}/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default OutputPersonalInfo;","import React from 'react';\nimport CreateListCompForPreview from './CreateListCompForPreview';\n\nclass CreateCollectionComp extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.array.map((item, id) => {\n          return (\n            <li key={id} className='ExpBlock'>\n              <CreateListCompForPreview obj={item}/>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateCollectionComp;","import React from 'react';\nimport CreateCollectionComp from './CreateCollectionComp';\nimport CreateListCompForPreview from './CreateListCompForPreview';\n\nclass OutputInfoComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readonly = true;\n  }\n\n  render() {\n    let array = Object.entries(this.props.obj),\n        collectionPractic = array[1][1],\n        templatePractic = array[0][1],\n        renderComp = (collectionPractic.length) \n                ? <CreateCollectionComp array={collectionPractic}/> \n                : <CreateListCompForPreview obj={templatePractic}/>;     \n    \n    return (\n      <div>\n        <h2>{this.props.headline}</h2>\n\n        {renderComp}\n      </div>\n    )\n  }\n}\n\nexport default OutputInfoComp;","import React from 'react';\nimport OutputInfoComp from '../../../additionalComponents/componentsForOuputPreviewInfo/OutputInfoComp';\n\nclass CommonInformation extends React.Component {\n  componentDidMount() {\n    this.setState(this.props.obj);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n        this.setState(this.props.obj);\n      }\n  }\n\n  render() {\n    return (\n      <div id='commonInformation'>\n        <OutputInfoComp obj={this.props.obj.educExp} headline='Educational experience'/>\n        <OutputInfoComp obj={this.props.obj.practicExp} headline='Educational experience'/>\n      </div>\n    )\n  }\n}\n\nexport default CommonInformation;","import React from 'react';\nimport OutputPersonalInfo from './personalInfoBlock/OutputPersonalInfo';\nimport CloneObj from '../../additionalComponents/CloneObj';\nimport CommonInformation from './commonInformation/CommonInformationComp';\n\nclass PreviewCV extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.CommonParentScope = props.parentScope();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState === this.state) {\n      this.setState(CloneObj(this.CommonParentScope.state));\n    }\n  }\n\n  render() {\n    return (\n      <section id='previewCV'>\n        {this.state && <CommonInformation obj={this.state}/>}\n\n        {this.state && <OutputPersonalInfo parentState={this.state} />}\n      </section>\n    )\n  }\n}\n\nexport default PreviewCV","import React from 'react';\nimport TemplateCV from './components/templateCV/TemplateCV';\nimport PreviewCV from './components/previewCV/PreviewCV';\n\nclass CommonParentComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.returnCommonParentComponent = this.returnCommonParentComponent.bind(this);\n  }\n\n  returnCommonParentComponent() {\n    return this;\n  }\n\n  render() {\n    return (\n      <div>\n        <TemplateCV parentScope={this.returnCommonParentComponent} />\n        <PreviewCV parentScope={this.returnCommonParentComponent}/>\n      </div>\n    )\n  }\n}\n\nexport default CommonParentComponent","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './headerComponent/Header'\nimport style from './style.css'\nimport CommonParentComponent from './commonComponents/CommonParentComponent'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <CommonParentComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}