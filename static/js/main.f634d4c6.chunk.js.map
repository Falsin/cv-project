{"version":3,"sources":["images/сonstructor.jpg","headerComponent/Header.js","commonComponents/additionalComponents/ChangeHandler.js","commonComponents/additionalComponents/ComponentsForInputsElements/InputsComponents.js","commonComponents/additionalComponents/CloneObj.js","commonComponents/additionalComponents/CreateListCompForTemplate.js","commonComponents/components/templateCV/compForTemplateCV/commonInfoComponents/InfoBox.js","commonComponents/components/templateCV/compForTemplateCV/commonInfoComponents/PhotoComp.js","commonComponents/additionalComponents/componentsForButtonSection/ButtonComp.js","commonComponents/additionalComponents/componentsForButtonSection/ButtonsSectionComp.js","commonComponents/additionalComponents/ClickHandler.js","commonComponents/additionalComponents/componentsForButtonSection/functionsForButtons.js","commonComponents/components/templateCV/compForTemplateCV/GeneralInfo.js","commonComponents/components/templateCV/compForTemplateCV/EducationalExperience.js","commonComponents/components/templateCV/TemplateCV.js","commonComponents/components/templateCV/compForTemplateCV/PracticalExperience.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/CreateListCompForPreview.js","images/emptyAvatar.jpg","commonComponents/components/previewCV/personalInfoBlock/compForOutputPersonalInfo/PhotoBlockComp.js","commonComponents/components/previewCV/personalInfoBlock/OutputPersonalInfo.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/CreateCollectionComp.js","commonComponents/additionalComponents/componentsForOuputPreviewInfo/OutputInfoComp.js","commonComponents/components/previewCV/commonInformation/CommonInformationComp.js","commonComponents/CommonParentComponent.js","commonComponents/components/previewCV/PreviewCV.js","index.js"],"names":["Header","className","src","constructor","alt","React","Component","changeHandler","InputComp","props","uniqIndex","uniqid","parentScope","scope","objName","array","state","isValidValue","isFocus","defaultValue","value","backgroundPosition","isMount","e","target","length","this","setState","event","console","log","prevProps","prevState","input","document","getElementById","readonly","focus","getAnimations","forEach","elem","onfinish","currentStyle","getComputedStyle","subObj","obj","nextProps","nextState","onClick","htmlFor","call","arram","enteredVal","type","templateScope","readOnly","onFocus","whileFocus","id","onChange","onBlur","afterBlurTest","style","textArea","countryComp","countryNamesArr","createListElements","collection","enteredItem","lowerCaseVal","toLowerCase","name","lowerCaseName","includes","push","enteredValHandler","list","removeAllChildElements","option","createElement","textContent","key","append","addEventListener","Promise","res","then","parentId","childTag","querySelectorAll","remove","mouseDownListener","fetch","mode","response","json","bind","map","onMouseDown","cloneObj","sourceObj","newObj","Array","isArray","CreateListCompForTemplate","collectionInputElements","Object","values","inputElem","idHtmlWithError","objKeys","collectionCompElem","countElemWithError","index","interimArr","splice","iterator","checkThisProps","every","isValid","entries","item","InfoBox","personalInfo","generalInfo","duplicateState","PhotoComp","url","undefined","selectedFile","files","reader","FileReader","elemTag","querySelector","onload","result","backgroundImage","addPropertyInState","readAsDataURL","clone","Avatar","onFileSelected","Button","func","ButtonsSection","btns","clickHandler","createObj","arrayOfKeysAndValues","objectWithProps","arrayWithObjects","check","addInfo","name1","name2","defaultState","sendInfo","propName","checkСondition","find","commonParentScope","sendSingleInformation","GeneralInfo","Name","Email","Phone","Country","EducationalExperience","educationalExperience","educationalExperienceCollection","educExp","TemplateCV","CloneObj","returnParentScope","CreateListCompForPreview","PhotoBlock","emptyAvatar","OutputPersonalInfo","parentState","CreateCollectionComp","OutputInfoComp","collectionPractic","templatePractic","renderComp","headline","CommonInformation","practicExp","CommonParentComponent","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f634d4c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/сonstructor.13325f3d.jpg\";","import React from 'react';\nimport constructor from '../images/сonstructor.jpg';\n\nclass Header extends React.Component {\n  render() {\n    return(\n      <header>\n        <div className='container'>\n          <img src={constructor} alt=''></img>\n          <h1>CV Сonstructor</h1>\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header;\n","import addPropertiesInState from \"./AddPropertiesInState\";\n\nfunction changeHandler(e, subObj) {\n  if (e.target.value.length > 0 && ![...e.target.classList].includes('active')) {\n    e.target.classList.add('active');\n  } else if (!e.target.value.length) {\n    e.target.classList.remove('active');\n  }\n\n  return addPropertiesInState.call(this, e, subObj)\n}\n\nexport default changeHandler;","import React from 'react';\nimport uniqid from 'uniqid'\n\nclass InputComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uniqIndex = uniqid();\n    this.parentScope = props.scope;\n    this.objName = props.array[0];\n\n    this.state = {\n      isValidValue: true,\n      isFocus: false,\n      defaultValue: props.array[1].value,\n      backgroundPosition: '200% 100%, 100% 100%',\n      isMount: true,\n    }\n  }\n\n  afterBlur(e) {\n    if (!e.target.value.length) {\n      this.setState({\n        isValidValue: false,\n        isFocus: false,\n        defaultValue: '',\n      });\n    } else {\n      this.setState({\n        isValidValue: true,\n        isFocus: false,\n        defaultValue: e.target.value,\n      });\n    }\n  }\n\n  afterBlurTest(event) {\n    console.log('hello')\n    console.log(event)\n    if (!event.length) {\n      this.setState({\n        isValidValue: false,\n        isFocus: false,\n        defaultValue: '',\n      });\n    } else {\n      this.setState({\n        isValidValue: true,\n        isFocus: false,\n        defaultValue: event,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {  //отредактировать\n    let input = document.getElementById(this.uniqIndex);\n\n    if (!this.parentScope.readonly) {\n      if (this.state.isFocus) {\n        input.focus();\n      }\n\n      const animations = input.getAnimations();\n      animations.forEach(elem => {\n        elem.onfinish = () => {\n          let computedStyle = getComputedStyle(input);\n          let currentStyle = computedStyle.backgroundPosition;\n          if (this.state.backgroundPosition !== currentStyle) {\n            this.setState({backgroundPosition: currentStyle})\n          }\n        }\n      })\n/* \n      console.log(this.state);\n      console.log(this.props.array); */\n\n      if (prevState !== this.state) {  // отредактировать условие\n        this.parentScope.props.subObj[this.objName].value = this.state.defaultValue;\n        this.parentScope.scope.setState(this.parentScope.props.obj);\n      } else if (prevProps.array[1].value !== this.props.array[1].value) {\n        this.setState({defaultValue: this.props.array[1].value})\n      }\n    } else {\n      this.setState({defaultValue: this.props.array[1].value});\n    }\n  }\n\n  whileFocus() {\n    //console.log(this)\n    if (!this.state.isValidValue) {\n      this.setState({\n        isValidValue: true,\n        isFocus: true,\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n/*     if (this.objName === 'Country') {\n      console.log(this.state);\n      console.log(nextState)\n    } */\n    if (!this.parentScope.readonly) {\n      return ((this.state !== nextState || \n              this.props.array[1].value !== nextProps.array[1].value) \n              ? true : false);\n    } else {\n      return ((this.state.defaultValue !== nextState.defaultValue || \n              nextProps.array[1].value !== this.state.defaultValue)\n              ? true : false);\n    }\n  }\n\n  componentDidMount() {\n    this.setState({isMount: false})\n  }\n\n  render() {\n    //console.log(this)\n    //console.log(this.state.defaultValue)\n    return (\n      <li key={uniqid()} className={this.state.isValidValue ? '' : 'error'}\n        onClick={e => this.setState({isFocus: true})}>\n\n        <label htmlFor={this.uniqIndex}>{this.objName}</label>\n        {this.props.elem.call(this, this)}\n\n      </li>\n    )\n  }\n}\n\n/* function input(arram) {\n  let type = arram;\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    <InputComponent scope={this} />\n  }\n    \n}\n */\n/* class InputComponent extends React.Component {\n  render() {\n    return ((templateScope.readonly)\n      ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n      : <input key={uniqid()} type={type} onBlur={e => this.afterBlur(e)}\n          style={{backgroundPosition: this.state.backgroundPosition}}\n          onFocus={e => this.whileFocus(e)} id={uniqIndex} \n          defaultValue={this.state.defaultValue} />\n    )\n  }\n} */\n\n/* function input(arram) {\n  let enteredVal = '';\n\n  function enteredValHandler(e) {\n    enteredVal.value = e.target.value;\n    enteredVal.id = uniqid();\n  }\n\n  let type = arram;\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return((templateScope.readonly) \n      ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n      : <input key={uniqid()} type={type} onBlur={e => this.afterBlur(e)}\n          style={{backgroundPosition: this.state.backgroundPosition}}\n          onFocus={e => this.whileFocus(e)} id={uniqIndex} \n          defaultValue={this.state.defaultValue} />)\n  }\n} */\n\nfunction input(arram) {\n  let enteredVal = '';\n  let type = arram;\n\n/*   console.log(this)\n  console.log(type) */\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    if (!this.parentScope.readonly && this.state.isMount) {\n      enteredVal = this.state.defaultValue;\n    }\n\n/*     \n    не работает из-за прослушивателя анимации, который\n    повторно рендерит\n    if (enteredVal !== this.state.defaultValue) {\n      enteredVal = this.state.defaultValue\n    } */\n\n    return((templateScope.readonly) \n      ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n      : <input key={uniqid()} type={type} defaultValue={enteredVal}\n          onFocus={e => this.whileFocus(e)} id={uniqIndex}\n          onChange={e => enteredVal = e.target.value}  \n          onBlur={e => this.afterBlurTest(e.target.value)}\n          style={{backgroundPosition: this.state.backgroundPosition}} />)\n  }\n}\n\nfunction textArea (arram) {\n  let enteredVal = '';\n  let type = arram;\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return ((templateScope.readonly) \n          ? <textarea key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n          : <textarea key={uniqid()} type={type} defaultValue={enteredVal}\n              style={{backgroundPosition: this.state.backgroundPosition}}\n              onFocus={e => this.whileFocus(e)} id={uniqIndex}\n              onChange={e => enteredVal = e.target.value}\n              onBlur={e => this.afterBlurTest(e.target.value)}  />\n      )\n  }\n}\n\nfunction countryComp(arram) {\n  let type = arram;\n  let countryNamesArr = [];\n  let enteredVal = '';\n\n  fetch(`https://restcountries.eu/rest/v2/all`, {mode: 'cors'})\n    .then(response => response.json())\n    .then(response => countryNamesArr = response);\n\n  function createListElements() {\n    let collection = [];\n    const enteredItem = enteredVal;\n    const lowerCaseVal = enteredItem.toLowerCase();\n\n    for (const {name} of countryNamesArr) {\n      const lowerCaseName = name.toLowerCase();\n      if(enteredItem.length > 2 && lowerCaseName.includes(lowerCaseVal) && enteredItem !== name) {\n        collection.push({\n          name: name,\n        });\n      }\n    }\n    return collection;\n  }\n\n  function enteredValHandler(e) {\n    enteredVal = e.target.value;\n \n    let list = removeAllChildElements('cityName', 'li');\n    let htmlNodeCollection = createListElements();\n\n    htmlNodeCollection.forEach((elem, id) => {\n      let option = document.createElement('li');\n      option.textContent = elem.name;\n      option.key = id;\n      list.append(option);\n\n      option.addEventListener('mousedown', e => {\n        enteredVal = e.target.textContent;\n        new Promise(res => {\n          this.setState({\n            defaultValue: e.target.textContent,\n          })\n          res(this)\n        })\n        .then(() => removeAllChildElements('cityName', 'li'));\n      })\n    })\n  }\n\n  function removeAllChildElements(parentId, childTag) {\n    let list = document.getElementById(parentId);\n    let options = list.querySelectorAll(childTag);\n    options.forEach(elem => elem.remove());\n    return list;\n  }\n\n  function mouseDownListener(e) {\n    enteredVal = e.target.textContent;\n    this.setState({\n      defaultValue: e.target.textContent,\n    })\n  }\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return ((templateScope.readonly) \n        ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n        : <div>\n            <input type={type} key={uniqid()}\n              style={{backgroundPosition: this.state.backgroundPosition}}\n              onBlur={() => this.afterBlurTest(enteredVal)} \n              onChange={enteredValHandler.bind(this)}\n              defaultValue={enteredVal} id={uniqIndex} list='cityName'/>\n\n            <ul id='cityName'>\n              {createListElements().map((elem, id) => {\n                return (\n                <li key={id} onMouseDown={mouseDownListener.bind(this)}>{elem.name}</li>\n                )\n              })}\n            </ul>\n          </div>\n      )\n  }\n}\n\n/* function countryComp(arram) {\n  let type = arram;\n  let countryNamesArr = [];\n  let enteredVal = {\n    value: '',\n    id: uniqid(),\n  }\n\n  fetch(`https://restcountries.eu/rest/v2/all`, {mode: 'cors'})\n    .then(response => response.json())\n    .then(response => countryNamesArr = response);\n\n  function createListElements() {\n    let collection = [];\n    const enteredItem = enteredVal.value;\n    const lowerCaseVal = enteredItem.toLowerCase();\n\n    for (const {name} of countryNamesArr) {\n      const lowerCaseName = name.toLowerCase();\n      if(enteredItem.length > 2 && lowerCaseName.includes(lowerCaseVal) && enteredItem !== name) {\n        collection.push({\n          id: uniqid(),\n          name: name,\n        });\n      }\n    }\n    return collection;\n  }\n\n  function enteredValHandler(e) {\n    enteredVal.value = e.target.value;\n    enteredVal.id = uniqid();\n    new Promise(res => {\n      this.setState({\n        defaultValue: enteredVal.value,\n        isFocus: true,\n      })\n      res(this)\n    })\n    .then(response => {\n      let list = removeAllChildElements('cityName', 'li');\n      let htmlNodeCollection = createListElements();\n\n      htmlNodeCollection.forEach(elem => {\n        let option = document.createElement('li');\n        option.textContent = elem.name;\n        option.key = elem.id;\n        list.append(option);\n\n        option.addEventListener('mousedown', e => {\n          new Promise(res => {\n            response.setState({\n              defaultValue: e.target.textContent,\n            })\n            res(response)\n          })\n          .then(() => removeAllChildElements('cityName', 'li'));\n        })\n      })\n    })\n  }\n\n  function removeAllChildElements(parentId, childTag) {\n    let list = document.getElementById(parentId);\n    let options = list.querySelectorAll(childTag);\n    options.forEach(elem => elem.remove());\n    return list;\n  }\n\n  return function () {\n    let templateScope = this.parentScope;\n    let uniqIndex = this.uniqIndex;\n\n    return ((templateScope.readonly) \n        ? <input key={uniqid()} type={type} value={this.state.defaultValue} readOnly />\n        : <div>\n            <input type={type} key={uniqid()}\n              style={{backgroundPosition: this.state.backgroundPosition}}\n              onFocus={this.whileFocus()}\n              onBlur={e => this.afterBlur(e)} \n              onChange={enteredValHandler.bind(this)}\n              value={this.state.defaultValue} id={uniqIndex} list='cityName'/>\n\n            <ul id='cityName'></ul>\n          </div>\n      )\n  }\n} */\n\nexport {input, textArea, countryComp, InputComp};","function cloneObj(sourceObj) {\n  let newObj = {};\n  \n  for (const key in sourceObj) {\n    if (Array.isArray(sourceObj[key])) {\n      newObj[key] = [];\n      sourceObj[key].forEach(elem => newObj[key].push(cloneObj(elem)));\n\n    } else if (typeof sourceObj[key] !== 'object') {\n      newObj[key] = sourceObj[key];\n    } else {\n      newObj[key] = cloneObj(sourceObj[key]);\n    }\n  }\n  return newObj;\n}\n\n\n/* function cloneObj(sourceObj) {\n\n\nconsole.log(sourceObj)\n  let newObj = Object.create(Object.getPrototypeOf(sourceObj));\n\n  for (const key in sourceObj) {\n    if (Array.isArray(sourceObj[key])) {\n      newObj[key] = [];\n      sourceObj[key].forEach(elem => {\n        newObj[key].push(cloneObj(elem));\n      });\n    } else if (typeof sourceObj[key] !== 'object') {\n      newObj[key] = sourceObj[key];\n    } else {\n      newObj[key] = cloneObj(sourceObj[key]);\n    }\n  }\n  return newObj;\n  return sourceObj;\n} */\n\nexport default cloneObj","import React from 'react';\nimport changeHandler from './ChangeHandler';\nimport uniqid from 'uniqid';\nimport { InputComp } from './ComponentsForInputsElements/InputsComponents';\nimport cloneObj from './CloneObj';\n\nclass CreateListCompForTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scope = this.props.scope;\n    this.collectionInputElements = ((params) => {\n      return Object.values(props.subObj).map(elem => {\n        if (typeof elem === 'object') {\n          return elem.inputElem()\n        }\n      })\n    })()\n\n    this.state = {\n      idHtmlWithError: [],     // убрать\n      objKeys: {},             // убрать\n      collectionCompElem: [],  // убрать\n      countElemWithError: 0,\n    }\n  }\n\n  reduceArray(index) {\n    let interimArr = [...this.state.idHtmlWithError];\n    interimArr.splice(index, 1);\n    this.setState({\n      idHtmlWithError: interimArr\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n  let initianArray = Object.values(this.props.subObj);\n  let array = [];\n\n    for (const iterator of initianArray) {\n      if (typeof iterator === 'object') {\n        array.push(iterator)\n      }\n    }\n\n    let checkThisProps = array.every(elem => {\n      return elem.value !== '';\n    });\n\n    this.props.subObj.isValid = checkThisProps ? true : false;\n  }\n\n  render() {\n    return (\n      <ul>\n        {Object.entries(this.props.subObj).map((item, id) => {\n          if (typeof item[1] === 'object') {\n            /* return <InputComp scope={this} array={item} elem={item[1].inputElem()} /> */\n            return <InputComp scope={this} array={item} elem={this.collectionInputElements[id]} />\n          } \n          return null;\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateListCompForTemplate;","import React from 'react';\nimport CreateListCompForTemplate from '../../../../additionalComponents/CreateListCompForTemplate';\n\nclass InfoBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.parentScope = props.parentScope;\n    this.personalInfo = this.parentScope.state.generalInfo;\n  }\n\n  render() {\n    let duplicateState = this.parentScope.state;\n    \n    return (\n      <div>\n        <h2>Personal information</h2>\n        <CreateListCompForTemplate subObj={duplicateState.generalInfo} obj={duplicateState} scope={this.parentScope}/>\n      </div>\n    )\n  }\n}\n\nexport default InfoBox","import React from 'react';\nimport cloneObj from '../../../../additionalComponents/CloneObj';\n\nclass PhotoComp extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.parentScope = props.parentScope;\n    this.url = undefined;\n  }\n\n  onFileSelected(e) {\n    const selectedFile = e.target.files[0];\n\n    if (selectedFile !== undefined) {\n      const reader = new FileReader();\n      const elemTag = document.querySelector('.photo');\n\n      reader.onload = (e) => {  \n        this.url = e.target.result;\n        elemTag.style.backgroundImage = `url(${this.url})`;\n\n        this.addPropertyInState()\n      }\n\n      reader.readAsDataURL(selectedFile);\n    }\n  }\n\n  componentDidMount() {\n    this.addPropertyInState()\n  }\n\n  addPropertyInState() {\n    let clone = this.parentScope.state.generalInfo;\n    clone.Avatar = this.url;\n    this.parentScope.setState({\n      generalInfo: clone\n    });\n  }\n\n  render() {\n    return (\n      <div className='photo'>\n          <label><input type='file' onChange={this.onFileSelected.bind(this)}></input></label>\n      </div>\n    )\n  }\n}\n\nexport default PhotoComp;","import React from 'react'\n\nclass Button extends React.Component {\n  render() {\n    return (\n      <input type='button' value={this.props.value}\n        onClick={() => {\n          this.props.func()\n        }}>\n      </input>\n    )\n  }\n}\n\nexport default Button","import React from 'react';\nimport Button from './ButtonComp';\n\nclass ButtonsSection extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.btns.map((elem, id) => {\n          return <Button type='button' value={elem.value} func={elem.func} key={id}/>\n        })}\n      </div>\n    )\n  }\n}\n\nexport default ButtonsSection","function clickHandler(subObj, scope) {\n  scope.setState(subObj);\n}\n\nexport default clickHandler;","import cloneObj from \"../CloneObj\";\nimport clickHandler from \"../ClickHandler\";\n\nfunction createObj(duplicateState) {\n  let arrayOfKeysAndValues = Object.entries(duplicateState);\n\n  let objectWithProps = arrayOfKeysAndValues[0][1];\n  let arrayWithObjects = arrayOfKeysAndValues[1] ? arrayOfKeysAndValues[1][1] : null;\n\n  let array = [];\n\n  for (const key in objectWithProps) {\n    if (typeof objectWithProps[key] === 'object') {\n      array.push(objectWithProps[key])\n    }\n  }\n\n  let check = array.every(elem => elem.value !== '');\n\n  return {arrayOfKeysAndValues, objectWithProps, arrayWithObjects, check};\n}\n\nfunction addInfo(duplicateState) {\n  let {arrayOfKeysAndValues, objectWithProps, arrayWithObjects, check} = createObj(duplicateState);\n\n  if (check) {\n    arrayWithObjects.push(objectWithProps);\n\n    let name1 = arrayOfKeysAndValues[0][0];\n    let name2 = arrayOfKeysAndValues[1][0];\n\n    new Promise((res) => {\n      this.setState({\n        [name1]: cloneObj(this.defaultState),\n        [name2]: arrayWithObjects\n      })\n      res(this)\n    })\n    //.then(response => console.log(response.state))\n  } \n}\n\nfunction sendInfo(duplicateState, propName) {\n  let {objectWithProps, arrayWithObjects, check} = createObj(duplicateState);\n\n  let checkСondition = arrayWithObjects.find((elem) => {\n    return elem.isValid === false;\n  })\n\n  if (check && !checkСondition) {\n    arrayWithObjects.push(objectWithProps);\n\n    let subObj = {\n      [propName]: duplicateState,\n    }\n    \n    clickHandler(subObj, this.commonParentScope);\n  }\n}\n\nfunction sendSingleInformation(duplicateState) {\n  //console.log(duplicateState)\n  let {check} = createObj(duplicateState);\n\n  if (check) {\n    clickHandler(duplicateState, this.commonParentScope);\n  }\n}\n\nexport {addInfo, sendInfo, sendSingleInformation};","import React from 'react';\nimport InfoBox from './commonInfoComponents/InfoBox';\nimport PhotoComp from './commonInfoComponents/PhotoComp'\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport { input, countryComp } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\nimport { sendSingleInformation } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport cloneObj from '../../../additionalComponents/CloneObj';\n\nclass GeneralInfo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      generalInfo: {\n        Name: {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        Email: {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        Phone: {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        Country: {\n          value: '',\n          inputElem: countryComp.bind(this, 'text'),\n        },\n        \n        isValid: true,\n      }\n    }\n    \n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n  }\n\n  componentDidMount() {\n    this.parentScope.setState(this.state);\n  }\n  \n  render() {\n    return(\n      <section>\n        <form>\n          <div className='infoBlocks'>\n            <InfoBox parentScope={this}/>\n\n            <PhotoComp parentScope={this} />\n          </div>\n\n          <ButtonsSection btns={[\n            {\n              value: 'Add information', \n              func: sendSingleInformation.bind(this, this.state, 'generalInfo')\n            }\n          ]} />\n        </form>\n\n      </section>\n    )\n  }\n}\n\nexport default GeneralInfo;","import React from 'react'\nimport cloneObj from '../../../additionalComponents/CloneObj';\nimport CreateListCompForTemplate from '../../../additionalComponents/CreateListCompForTemplate';\nimport { addInfo, sendInfo } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport { input } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\n\nclass EducationalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      educationalExperience: {\n        'School name': {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        'Title of study': {\n          value: '',\n          inputElem: input.bind(this, 'text'),\n        },\n        'Date of study': {\n          value: '',\n          inputElem: input.bind(this, 'date'),\n        },\n\n        isValid: true,\n      },\n\n      educationalExperienceCollection: [],\n    }\n\n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n    this.defaultState = cloneObj(this.state.educationalExperience);\n  }\n\n  componentDidMount() {\n    this.parentScope.setState({educExp: cloneObj(this.state)});\n  }\n\n  render() {\n    let duplicateState = cloneObj(this.state);\n\n    return (\n      <section className='expBlock'>\n        <h2>Educational experience</h2>\n\n        <ul className='specialStyleKit'>\n          {duplicateState.educationalExperienceCollection.map((item, id) => {\n            //console.log(item)\n            return (\n              <li key={id}>\n                <CreateListCompForTemplate subObj={item} obj={duplicateState} scope={this}/>\n              </li>\n            )\n          })}\n        </ul>\n\n        <CreateListCompForTemplate subObj={duplicateState.educationalExperience} obj={duplicateState} scope={this}/>\n\n        <ButtonsSection btns={[\n          {\n            value: 'Add information', \n            func: sendInfo.bind(this, duplicateState, 'educExp')\n          },\n          {\n            value: 'Plus', \n            func: addInfo.bind(this, duplicateState)\n          }\n        ]}/>\n      </section>\n    )\n  }\n}\n\nexport default EducationalExperience;","import React from 'react';\nimport GeneralInfo from './compForTemplateCV/GeneralInfo';\nimport EducationalExperience from './compForTemplateCV/EducationalExperience';\nimport PracticalExperience from './compForTemplateCV/PracticalExperience';\n\nimport CloneObj from '../../additionalComponents/CloneObj';\n\nclass TemplateCV extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.commonParentScope = props.parentScope;\n  }\n\n  returnParentScope() {\n    return this;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState === null) {\n      this.commonParentScope.setState(CloneObj(this.state));\n    }\n  }\n\n  render() {\n    return(\n      <section id='templateCV'>\n        <GeneralInfo parentScope={this.returnParentScope.bind(this)}/>\n        <EducationalExperience parentScope={this.returnParentScope.bind(this)}/>\n        {/* <PracticalExperience parentScope={this.returnParentScope.bind(this)} /> */}\n      </section>\n    )\n  }\n}\n\nexport default TemplateCV;","import React from 'react';\nimport ButtonsSection from '../../../additionalComponents/componentsForButtonSection/ButtonsSectionComp';\nimport cloneObj from '../../../additionalComponents/CloneObj';\nimport { textArea, input } from '../../../additionalComponents/ComponentsForInputsElements/InputsComponents';\nimport { addInfo, sendInfo } from '../../../additionalComponents/componentsForButtonSection/functionsForButtons';\nimport CreateListCompForTemplate from '../../../additionalComponents/CreateListCompForTemplate';\n\nclass PracticalExperience extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      practicalExperience: {\n        'Company name': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Position title': {\n          value: '',\n          inputElem: input('text'),\n        },\n        'Main tasks of your jobs': {\n          value: '',\n          inputElem: textArea('text'),\n        },\n        'From': {\n          value: '',\n          inputElem: input('date'),\n        },\n        'To': {\n          value: '',\n          inputElem: input('date'),\n        },\n\n        isValid: true,\n      },\n      practicalExperienceCollection: []\n    }\n\n    this.parentScope = props.parentScope();\n    this.commonParentScope = this.parentScope.commonParentScope;\n    this.defaultState = cloneObj(this.state.practicalExperience);\n  }\n\n  componentDidMount() {\n    this.parentScope.setState({practicExp: cloneObj(this.state)});\n  }\n\n  render() {\n    let duplicateState = cloneObj(this.state);\n\n    return (\n      <section className='expBlock'>\n        <h2>Practical experience</h2>\n\n        <ul className='specialStyleKit'>\n          {duplicateState.practicalExperienceCollection.map((item, id) => {\n              return (\n                <li key={id}>\n                  <CreateListCompForTemplate subObj={item} obj={duplicateState} scope={this}/>\n                </li>\n              )\n            })}\n        </ul>\n\n        <CreateListCompForTemplate subObj={duplicateState.practicalExperience} obj={duplicateState} scope={this}/>\n\n        <ButtonsSection btns={[\n            {\n              value: 'Add information', \n              func: sendInfo.bind(this, duplicateState, 'practicExp')\n            },\n            {\n              value: 'Plus', \n              func: addInfo.bind(this, duplicateState)\n            }\n          ]} />\n      </section>\n    )\n  }\n}\n\nexport default PracticalExperience;","import React from 'react';\nimport { InputComp } from '../ComponentsForInputsElements/InputsComponents';\n\nclass CreateListCompForPreview extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readonly = true;\n  }\n\n  render() {\n    return (\n      <ul>\n        {Object.entries(this.props.obj).map((item, id) => {\n          if (typeof item[1] === 'object') {\n            return <InputComp key={id} scope={this} array={item} elem={item[1].inputElem} />\n          }\n          return null;\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateListCompForPreview;","export default __webpack_public_path__ + \"static/media/emptyAvatar.5320030d.jpg\";","import React from 'react';\nimport emptyAvatar from '../../../../../images/emptyAvatar.jpg'\n\nclass PhotoBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      url: emptyAvatar\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props && this.props.obj !== undefined) {\n      this.setState({url: this.props.obj});\n    }\n  }\n\n  render() {\n    return (\n      <div id='photoBlock' style={{backgroundImage: `url(${this.state.url})`}}></div>\n    )\n  }\n}\n\nexport default PhotoBlock;","import React from 'react';\nimport CloneObj from '../../../additionalComponents/CloneObj';\nimport CreateListCompForPreview from '../../../additionalComponents/componentsForOuputPreviewInfo/CreateListCompForPreview';\nimport PhotoBlock from './compForOutputPersonalInfo/PhotoBlockComp';\n\nclass OutputPersonalInfo extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState(CloneObj(this.props.parentState))\n    }\n  }\n\n  render() {\n    return (\n      <div id='personalInformation'>\n\n        <PhotoBlock obj={this.props.parentState.generalInfo.Avatar}/>\n\n        <form>\n          <h2>Personal information</h2>\n          <CreateListCompForPreview obj={this.props.parentState.generalInfo}/>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default OutputPersonalInfo;","import React from 'react';\nimport CreateListCompForPreview from './CreateListCompForPreview';\n\nclass CreateCollectionComp extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.array.map((item, id) => {\n          return (\n            <li key={id} className='ExpBlock'>\n              <CreateListCompForPreview obj={item}/>\n            </li>\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nexport default CreateCollectionComp;","import React from 'react';\nimport CreateCollectionComp from './CreateCollectionComp';\nimport CreateListCompForPreview from './CreateListCompForPreview';\n\nclass OutputInfoComp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.readonly = true;\n  }\n\n  render() {\n    let array = Object.entries(this.props.obj),\n        collectionPractic = array[1][1],\n        templatePractic = array[0][1],\n        renderComp = (collectionPractic.length) \n                ? <CreateCollectionComp array={collectionPractic}/> \n                : <CreateListCompForPreview obj={templatePractic}/>;     \n    \n    return (\n      <div>\n        <h2>{this.props.headline}</h2>\n\n        {renderComp}\n      </div>\n    )\n  }\n}\n\nexport default OutputInfoComp;","import React from 'react';\nimport OutputInfoComp from '../../../additionalComponents/componentsForOuputPreviewInfo/OutputInfoComp';\n\nclass CommonInformation extends React.Component {\n  componentDidMount() {\n    this.setState(this.props.obj);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n        this.setState(this.props.obj);\n      }\n  }\n\n  render() {\n    return (\n      <div id='commonInformation'>\n        <OutputInfoComp obj={this.props.obj.educExp} headline='Educational experience'/>\n        <OutputInfoComp obj={this.props.obj.practicExp} headline='Educational experience'/>\n      </div>\n    )\n  }\n}\n\nexport default CommonInformation;","import React from 'react';\nimport TemplateCV from './components/templateCV/TemplateCV';\nimport PreviewCV from './components/previewCV/PreviewCV';\n\nclass CommonParentComponent extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <TemplateCV parentScope={this} />\n        {/* <PreviewCV parentScope={this}/> */}\n      </div>\n    )\n  }\n}\n\nexport default CommonParentComponent","import React from 'react';\nimport OutputPersonalInfo from './personalInfoBlock/OutputPersonalInfo';\nimport CloneObj from '../../additionalComponents/CloneObj';\nimport CommonInformation from './commonInformation/CommonInformationComp';\n\nclass PreviewCV extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.CommonParentScope = props.parentScope;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(prevState === this.state) {\n      this.setState(CloneObj(this.CommonParentScope.state));\n    }\n  }\n\n  render() {\n    return (\n      <section id='previewCV'>\n        {this.state && <CommonInformation obj={this.state}/>}\n\n        {this.state && <OutputPersonalInfo parentState={this.state} />}\n      </section>\n    )\n  }\n}\n\nexport default PreviewCV","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './headerComponent/Header'\nimport style from './style.css'\nimport CommonParentComponent from './commonComponents/CommonParentComponent'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <CommonParentComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}